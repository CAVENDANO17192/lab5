

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 27 02:39:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0014                     _SSPCON	set	20
   284  001E                     _ADRESH	set	30
   285  001F                     _ADCON0bits	set	31
   286  0005                     _PORTA	set	5
   287  0009                     _PORTE	set	9
   288  0007                     _PORTC	set	7
   289  0006                     _PORTB	set	6
   290  0008                     _PORTD	set	8
   291  0013                     _SSPBUF	set	19
   292  0014                     _SSPCONbits	set	20
   293  000C                     _PIR1bits	set	12
   294  0063                     _SSPIF	set	99
   295  005E                     _PEIE	set	94
   296  005F                     _GIE	set	95
   297  0091                     _SSPCON2bits	set	145
   298  0087                     _TRISCbits	set	135
   299  0094                     _SSPSTAT	set	148
   300  0093                     _SSPADD	set	147
   301  0091                     _SSPCON2	set	145
   302  009F                     _ADCON1bits	set	159
   303  0089                     _TRISE	set	137
   304  0088                     _TRISD	set	136
   305  0087                     _TRISC	set	135
   306  0086                     _TRISB	set	134
   307  0085                     _TRISA	set	133
   308  008F                     _OSCCONbits	set	143
   309  0094                     _SSPSTATbits	set	148
   310  0463                     _SSPIE	set	1123
   311  043C                     _TRISC4	set	1084
   312  043B                     _TRISC3	set	1083
   313  04A0                     _BF	set	1184
   314  0189                     _ANSELH	set	393
   315  0188                     _ANSEL	set	392
   316                           
   317                           ; #config settings
   318  0000                     
   319                           	psect	cinit
   320  000F                     start_initialization:	
   321  000F                     __initialization:	
   322                           
   323                           ; Clear objects allocated to COMMON
   324  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   325  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   326  0011                     end_of_initialization:	
   327                           ;End of C runtime variable initialization code
   328                           
   329  0011                     __end_of__initialization:	
   330  0011  0183               	clrf	3
   331  0012  120A  118A  2876   	ljmp	_main	;jump to C main() function
   332                           
   333                           	psect	bssCOMMON
   334  0074                     __pbssCOMMON:	
   335  0074                     _ADC:	
   336  0074                     	ds	1
   337  0075                     _z:	
   338  0075                     	ds	1
   339                           
   340                           	psect	cstackCOMMON
   341  0070                     __pcstackCOMMON:	
   342  0070                     ?_I2C_Slave_Init:	
   343  0070                     ?_LOOP:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_ANALOGICO:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_isr:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_isr:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_main:	
   356                           ; 1 bytes @ 0x0
   357                           
   358                           
   359                           ; 1 bytes @ 0x0
   360  0070                     	ds	3
   361  0073                     ??_I2C_Slave_Init:	
   362  0073                     ??_ANALOGICO:	
   363                           ; 1 bytes @ 0x3
   364                           
   365  0073                     I2C_Slave_Init@address:	
   366                           ; 1 bytes @ 0x3
   367                           
   368                           
   369                           ; 1 bytes @ 0x3
   370  0073                     	ds	1
   371  0074                     ??_LOOP:	
   372  0074                     ??_main:	
   373                           ; 1 bytes @ 0x4
   374                           
   375                           
   376                           	psect	maintext
   377  0076                     __pmaintext:	
   378                           ; 1 bytes @ 0x4
   379 ;;
   380 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   381 ;;
   382 ;; *************** function _main *****************
   383 ;; Defined at:
   384 ;;		line 79 in file "SLAVE_I2C.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0, pclath, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : B00/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0
   401 ;;      Totals:         0       0       0       0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels required when called:    3
   404 ;; This function calls:
   405 ;;		_I2C_Slave_Init
   406 ;;		_LOOP
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _main
   414  0076                     _main:	
   415  0076                     l802:	
   416                           ;incstack = 0
   417                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   418                           
   419                           
   420                           ;SLAVE_I2C.c: 80:     OSCCONbits.IRCF = 0b111;
   421  0076  3070               	movlw	112
   422  0077  1683               	bsf	3,5	;RP0=1, select bank1
   423  0078  1303               	bcf	3,6	;RP1=0, select bank1
   424  0079  048F               	iorwf	15,f	;volatile
   425  007A                     l804:	
   426                           
   427                           ;SLAVE_I2C.c: 81:     OSCCONbits.OSTS= 0;
   428  007A  118F               	bcf	15,3	;volatile
   429  007B                     l806:	
   430                           
   431                           ;SLAVE_I2C.c: 82:     OSCCONbits.HTS = 0;
   432  007B  110F               	bcf	15,2	;volatile
   433  007C                     l808:	
   434                           
   435                           ;SLAVE_I2C.c: 83:     OSCCONbits.LTS = 0;
   436  007C  108F               	bcf	15,1	;volatile
   437  007D                     l810:	
   438                           
   439                           ;SLAVE_I2C.c: 84:     OSCCONbits.SCS = 1;
   440  007D  140F               	bsf	15,0	;volatile
   441  007E                     l812:	
   442                           
   443                           ;SLAVE_I2C.c: 86:     TRISA = 0b00000001;
   444  007E  3001               	movlw	1
   445  007F  0085               	movwf	5	;volatile
   446  0080                     l814:	
   447                           
   448                           ;SLAVE_I2C.c: 87:     TRISB = 0;
   449  0080  0186               	clrf	6	;volatile
   450  0081                     l816:	
   451                           
   452                           ;SLAVE_I2C.c: 88:     TRISC = 0b00011000;
   453  0081  3018               	movlw	24
   454  0082  0087               	movwf	7	;volatile
   455  0083                     l818:	
   456                           
   457                           ;SLAVE_I2C.c: 89:     TRISD = 0;
   458  0083  0188               	clrf	8	;volatile
   459  0084                     l820:	
   460                           
   461                           ;SLAVE_I2C.c: 90:     TRISE = 0;
   462  0084  0189               	clrf	9	;volatile
   463  0085                     l822:	
   464                           
   465                           ;SLAVE_I2C.c: 91:     ANSEL = 0b00000001;
   466  0085  3001               	movlw	1
   467  0086  1683               	bsf	3,5	;RP0=1, select bank3
   468  0087  1703               	bsf	3,6	;RP1=1, select bank3
   469  0088  0088               	movwf	8	;volatile
   470  0089                     l824:	
   471                           
   472                           ;SLAVE_I2C.c: 92:     ANSELH = 0;
   473  0089  0189               	clrf	9	;volatile
   474  008A                     l826:	
   475                           
   476                           ;SLAVE_I2C.c: 93:     PORTB = 0;
   477  008A  1283               	bcf	3,5	;RP0=0, select bank0
   478  008B  1303               	bcf	3,6	;RP1=0, select bank0
   479  008C  0186               	clrf	6	;volatile
   480  008D                     l828:	
   481                           
   482                           ;SLAVE_I2C.c: 94:     PORTC = 0;
   483  008D  0187               	clrf	7	;volatile
   484  008E                     l830:	
   485                           
   486                           ;SLAVE_I2C.c: 95:     PORTD = 0;
   487  008E  0188               	clrf	8	;volatile
   488  008F                     l832:	
   489                           
   490                           ;SLAVE_I2C.c: 96:     PORTE = 0;
   491  008F  0189               	clrf	9	;volatile
   492  0090                     l834:	
   493                           
   494                           ;SLAVE_I2C.c: 97:     PORTA = 0;
   495  0090  0185               	clrf	5	;volatile
   496  0091                     l836:	
   497                           
   498                           ;SLAVE_I2C.c: 100:     ADCON0bits.ADCS = 01;
   499  0091  081F               	movf	31,w	;volatile
   500  0092  393F               	andlw	-193
   501  0093  3840               	iorlw	64
   502  0094  009F               	movwf	31	;volatile
   503  0095                     l838:	
   504                           
   505                           ;SLAVE_I2C.c: 101:     ADCON0bits.ADON = 1;
   506  0095  141F               	bsf	31,0	;volatile
   507  0096                     l840:	
   508                           
   509                           ;SLAVE_I2C.c: 102:     ADCON1bits.ADFM = 0;
   510  0096  1683               	bsf	3,5	;RP0=1, select bank1
   511  0097  1303               	bcf	3,6	;RP1=0, select bank1
   512  0098  139F               	bcf	31,7	;volatile
   513  0099                     l842:	
   514                           
   515                           ;SLAVE_I2C.c: 103:     ADCON1bits.VCFG0 = 0;
   516  0099  121F               	bcf	31,4	;volatile
   517  009A                     l844:	
   518                           
   519                           ;SLAVE_I2C.c: 104:     ADCON1bits.VCFG1 = 0;
   520  009A  129F               	bcf	31,5	;volatile
   521  009B                     l846:	
   522                           
   523                           ;SLAVE_I2C.c: 105:     I2C_Slave_Init(0x20);
   524  009B  3020               	movlw	32
   525  009C  120A  118A  20A9  120A  118A  	fcall	_I2C_Slave_Init
   526  00A1                     l848:	
   527                           
   528                           ;SLAVE_I2C.c: 107:       LOOP();
   529  00A1  120A  118A  20DB  120A  118A  	fcall	_LOOP
   530  00A6                     l77:	
   531  00A6  120A  118A  280C   	ljmp	start
   532  00A9                     __end_of_main:	
   533                           
   534                           	psect	text1
   535  00DB                     __ptext1:	
   536 ;; *************** function _LOOP *****************
   537 ;; Defined at:
   538 ;;		line 111 in file "SLAVE_I2C.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, status,2, status,0, pclath, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0
   555 ;;      Totals:         0       0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:    2
   559 ;; This function calls:
   560 ;;		_ANALOGICO
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           
   567                           ;psect for function _LOOP
   568  00DB                     _LOOP:	
   569  00DB                     l80:	
   570                           ;incstack = 0
   571                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   572                           ;SLAVE_I2C.c: 112:     while(1){
   573                           
   574  00DB                     l762:	
   575                           
   576                           ;SLAVE_I2C.c: 113:         ANALOGICO();
   577  00DB  120A  118A  20C3  120A  118A  	fcall	_ANALOGICO
   578  00E0  28DB               	goto	l80
   579  00E1  0008               	return
   580  00E2                     __end_of_LOOP:	
   581                           
   582                           	psect	text2
   583  00C3                     __ptext2:	
   584 ;; *************** function _ANALOGICO *****************
   585 ;; Defined at:
   586 ;;		line 118 in file "SLAVE_I2C.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          1       0       0       0       0
   603 ;;      Totals:         1       0       0       0       0
   604 ;;Total ram usage:        1 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_LOOP
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           
   615                           ;psect for function _ANALOGICO
   616  00C3                     _ANALOGICO:	
   617  00C3                     l736:	
   618                           ;incstack = 0
   619                           ; Regs used in _ANALOGICO: [wreg+status,2+status,0]
   620                           
   621                           
   622                           ;SLAVE_I2C.c: 119:     _delay((unsigned long)((1)*(4000000/4000.0)));
   623  00C3  30C7               	movlw	199
   624  00C4  00F3               	movwf	??_ANALOGICO
   625  00C5                     u157:	
   626  00C5  28C6               	nop2
   627  00C6  0BF3               	decfsz	??_ANALOGICO,f
   628  00C7  28C5               	goto	u157
   629  00C8  28C9               	nop2
   630  00C9  28CA               	nop2
   631  00CA                     l738:	
   632                           
   633                           ;SLAVE_I2C.c: 120:         ADCON0bits.CHS = 0000;
   634  00CA  30C3               	movlw	-61
   635  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   636  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   637  00CD  059F               	andwf	31,f	;volatile
   638  00CE                     l740:	
   639                           
   640                           ;SLAVE_I2C.c: 121:         ADCON0bits.ADON = 1;
   641  00CE  141F               	bsf	31,0	;volatile
   642  00CF                     l742:	
   643                           
   644                           ;SLAVE_I2C.c: 122:         ADCON0bits.GO = 1;
   645  00CF  149F               	bsf	31,1	;volatile
   646  00D0                     l86:	
   647                           ;SLAVE_I2C.c: 123:         while(ADCON0bits.GO);
   648                           
   649  00D0  189F               	btfsc	31,1	;volatile
   650  00D1  28D3               	goto	u11
   651  00D2  28D4               	goto	u10
   652  00D3                     u11:	
   653  00D3  28D0               	goto	l86
   654  00D4                     u10:	
   655  00D4                     l744:	
   656                           
   657                           ;SLAVE_I2C.c: 124:        ADC = ADRESH;
   658  00D4  081E               	movf	30,w	;volatile
   659  00D5  00F3               	movwf	??_ANALOGICO
   660  00D6  0873               	movf	??_ANALOGICO,w
   661  00D7  00F4               	movwf	_ADC
   662                           
   663                           ;SLAVE_I2C.c: 125:        PORTB = ADC;
   664  00D8  0874               	movf	_ADC,w
   665  00D9  0086               	movwf	6	;volatile
   666  00DA                     l89:	
   667  00DA  0008               	return
   668  00DB                     __end_of_ANALOGICO:	
   669                           
   670                           	psect	text3
   671  00A9                     __ptext3:	
   672 ;; *************** function _I2C_Slave_Init *****************
   673 ;; Defined at:
   674 ;;		line 76 in file "I2C_SLAVE.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  address         1    wreg     unsigned char 
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  address         1    3[COMMON] unsigned char 
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   688 ;;      Params:         0       0       0       0       0
   689 ;;      Locals:         1       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0
   691 ;;      Totals:         1       0       0       0       0
   692 ;;Total ram usage:        1 bytes
   693 ;; Hardware stack levels used:    1
   694 ;; Hardware stack levels required when called:    1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _I2C_Slave_Init
   704  00A9                     _I2C_Slave_Init:	
   705                           
   706                           ;incstack = 0
   707                           ; Regs used in _I2C_Slave_Init: [wreg]
   708                           ;I2C_Slave_Init@address stored from wreg
   709  00A9  00F3               	movwf	I2C_Slave_Init@address
   710  00AA                     l748:	
   711                           
   712                           ;I2C_SLAVE.c: 77:     SSPADD = address;
   713  00AA  0873               	movf	I2C_Slave_Init@address,w
   714  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   715  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   716  00AD  0093               	movwf	19	;volatile
   717                           
   718                           ;I2C_SLAVE.c: 78:     SSPCON = 0x36;
   719  00AE  3036               	movlw	54
   720  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   721  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   722  00B1  0094               	movwf	20	;volatile
   723                           
   724                           ;I2C_SLAVE.c: 79:     SSPSTAT = 0x80;
   725  00B2  3080               	movlw	128
   726  00B3  1683               	bsf	3,5	;RP0=1, select bank1
   727  00B4  1303               	bcf	3,6	;RP1=0, select bank1
   728  00B5  0094               	movwf	20	;volatile
   729                           
   730                           ;I2C_SLAVE.c: 80:     SSPCON2 = 0x01;
   731  00B6  3001               	movlw	1
   732  00B7  0091               	movwf	17	;volatile
   733  00B8                     l750:	
   734                           
   735                           ;I2C_SLAVE.c: 81:     TRISC3 = 1;
   736  00B8  1587               	bsf	7,3	;volatile
   737  00B9                     l752:	
   738                           
   739                           ;I2C_SLAVE.c: 82:     TRISC4 = 1;
   740  00B9  1607               	bsf	7,4	;volatile
   741  00BA                     l754:	
   742                           
   743                           ;I2C_SLAVE.c: 83:     GIE = 1;
   744  00BA  178B               	bsf	11,7	;volatile
   745  00BB                     l756:	
   746                           
   747                           ;I2C_SLAVE.c: 84:     PEIE = 1;
   748  00BB  170B               	bsf	11,6	;volatile
   749  00BC                     l758:	
   750                           
   751                           ;I2C_SLAVE.c: 85:     SSPIF = 0;
   752  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   753  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   754  00BE  118C               	bcf	12,3	;volatile
   755  00BF                     l760:	
   756                           
   757                           ;I2C_SLAVE.c: 86:     SSPIE = 1;
   758  00BF  1683               	bsf	3,5	;RP0=1, select bank1
   759  00C0  1303               	bcf	3,6	;RP1=0, select bank1
   760  00C1  158C               	bsf	12,3	;volatile
   761  00C2                     l144:	
   762  00C2  0008               	return
   763  00C3                     __end_of_I2C_Slave_Init:	
   764                           
   765                           	psect	text4
   766  0015                     __ptext4:	
   767 ;; *************** function _isr *****************
   768 ;; Defined at:
   769 ;;		line 44 in file "SLAVE_I2C.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         0       0       0       0       0
   784 ;;      Locals:         0       0       0       0       0
   785 ;;      Temps:          3       0       0       0       0
   786 ;;      Totals:         3       0       0       0       0
   787 ;;Total ram usage:        3 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		Interrupt level 1
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _isr
   798  0015                     _isr:	
   799  0015                     i1l768:	
   800                           
   801                           ;SLAVE_I2C.c: 45:    if(PIR1bits.SSPIF == 1){
   802  0015  1283               	bcf	3,5	;RP0=0, select bank0
   803  0016  1303               	bcf	3,6	;RP1=0, select bank0
   804  0017  1D8C               	btfss	12,3	;volatile
   805  0018  281A               	goto	u4_21
   806  0019  281B               	goto	u4_20
   807  001A                     u4_21:	
   808  001A  286F               	goto	i1l72
   809  001B                     u4_20:	
   810  001B                     i1l770:	
   811                           
   812                           ;SLAVE_I2C.c: 47:         SSPCONbits.CKP = 0;
   813  001B  1214               	bcf	20,4	;volatile
   814                           
   815                           ;SLAVE_I2C.c: 49:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   816  001C  1B14               	btfsc	20,6	;volatile
   817  001D  281F               	goto	u5_21
   818  001E  2820               	goto	u5_20
   819  001F                     u5_21:	
   820  001F  2824               	goto	i1l774
   821  0020                     u5_20:	
   822  0020                     i1l772:	
   823  0020  1F94               	btfss	20,7	;volatile
   824  0021  2823               	goto	u6_21
   825  0022  2824               	goto	u6_20
   826  0023                     u6_21:	
   827  0023  282B               	goto	i1l782
   828  0024                     u6_20:	
   829  0024                     i1l774:	
   830                           
   831                           ;SLAVE_I2C.c: 50:             z = SSPBUF;
   832  0024  0813               	movf	19,w	;volatile
   833  0025  00F0               	movwf	??_isr
   834  0026  0870               	movf	??_isr,w
   835  0027  00F5               	movwf	_z
   836  0028                     i1l776:	
   837                           
   838                           ;SLAVE_I2C.c: 51:             SSPCONbits.SSPOV = 0;
   839  0028  1314               	bcf	20,6	;volatile
   840  0029                     i1l778:	
   841                           
   842                           ;SLAVE_I2C.c: 52:             SSPCONbits.WCOL = 0;
   843  0029  1394               	bcf	20,7	;volatile
   844  002A                     i1l780:	
   845                           
   846                           ;SLAVE_I2C.c: 53:             SSPCONbits.CKP = 1;
   847  002A  1614               	bsf	20,4	;volatile
   848  002B                     i1l782:	
   849                           
   850                           ;SLAVE_I2C.c: 56:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   851  002B  1683               	bsf	3,5	;RP0=1, select bank1
   852  002C  1303               	bcf	3,6	;RP1=0, select bank1
   853  002D  1A94               	btfsc	20,5	;volatile
   854  002E  2830               	goto	u7_21
   855  002F  2831               	goto	u7_20
   856  0030                     u7_21:	
   857  0030  284C               	goto	i1l63
   858  0031                     u7_20:	
   859  0031                     i1l784:	
   860  0031  1914               	btfsc	20,2	;volatile
   861  0032  2834               	goto	u8_21
   862  0033  2835               	goto	u8_20
   863  0034                     u8_21:	
   864  0034  284C               	goto	i1l63
   865  0035                     u8_20:	
   866  0035                     i1l786:	
   867                           
   868                           ;SLAVE_I2C.c: 58:             z = SSPBUF;
   869  0035  1283               	bcf	3,5	;RP0=0, select bank0
   870  0036  1303               	bcf	3,6	;RP1=0, select bank0
   871  0037  0813               	movf	19,w	;volatile
   872  0038  00F0               	movwf	??_isr
   873  0039  0870               	movf	??_isr,w
   874  003A  00F5               	movwf	_z
   875  003B                     i1l788:	
   876                           
   877                           ;SLAVE_I2C.c: 60:             PIR1bits.SSPIF = 0;
   878  003B  118C               	bcf	12,3	;volatile
   879  003C                     i1l790:	
   880                           
   881                           ;SLAVE_I2C.c: 61:             SSPCONbits.CKP = 1;
   882  003C  1614               	bsf	20,4	;volatile
   883  003D                     i1l64:	
   884                           ;SLAVE_I2C.c: 62:             while(!SSPSTATbits.BF);
   885                           
   886  003D  1683               	bsf	3,5	;RP0=1, select bank1
   887  003E  1303               	bcf	3,6	;RP1=0, select bank1
   888  003F  1C14               	btfss	20,0	;volatile
   889  0040  2842               	goto	u9_21
   890  0041  2843               	goto	u9_20
   891  0042                     u9_21:	
   892  0042  283D               	goto	i1l64
   893  0043                     u9_20:	
   894  0043                     i1l792:	
   895                           
   896                           ;SLAVE_I2C.c: 63:             PORTD = SSPBUF;
   897  0043  1283               	bcf	3,5	;RP0=0, select bank0
   898  0044  1303               	bcf	3,6	;RP1=0, select bank0
   899  0045  0813               	movf	19,w	;volatile
   900  0046  0088               	movwf	8	;volatile
   901                           
   902                           ;SLAVE_I2C.c: 64:             _delay((unsigned long)((250)*(4000000/4000000.0)));
   903  0047  3053               	movlw	83
   904  0048  00F0               	movwf	??_isr
   905  0049                     u16_27:	
   906  0049  0BF0               	decfsz	??_isr,f
   907  004A  2849               	goto	u16_27
   908                           
   909                           ;SLAVE_I2C.c: 66:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   910  004B  286C               	goto	i1l67
   911  004C                     i1l63:	
   912  004C  1A94               	btfsc	20,5	;volatile
   913  004D  284F               	goto	u10_21
   914  004E  2850               	goto	u10_20
   915  004F                     u10_21:	
   916  004F  286C               	goto	i1l67
   917  0050                     u10_20:	
   918  0050                     i1l794:	
   919  0050  1D14               	btfss	20,2	;volatile
   920  0051  2853               	goto	u11_21
   921  0052  2854               	goto	u11_20
   922  0053                     u11_21:	
   923  0053  286C               	goto	i1l67
   924  0054                     u11_20:	
   925  0054                     i1l796:	
   926                           
   927                           ;SLAVE_I2C.c: 67:             z = SSPBUF;
   928  0054  1283               	bcf	3,5	;RP0=0, select bank0
   929  0055  1303               	bcf	3,6	;RP1=0, select bank0
   930  0056  0813               	movf	19,w	;volatile
   931  0057  00F0               	movwf	??_isr
   932  0058  0870               	movf	??_isr,w
   933  0059  00F5               	movwf	_z
   934  005A                     i1l798:	
   935                           
   936                           ;SLAVE_I2C.c: 68:             BF = 0;
   937  005A  1683               	bsf	3,5	;RP0=1, select bank1
   938  005B  1303               	bcf	3,6	;RP1=0, select bank1
   939  005C  1014               	bcf	20,0	;volatile
   940                           
   941                           ;SLAVE_I2C.c: 69:             SSPBUF = ADC;
   942  005D  0874               	movf	_ADC,w
   943  005E  1283               	bcf	3,5	;RP0=0, select bank0
   944  005F  1303               	bcf	3,6	;RP1=0, select bank0
   945  0060  0093               	movwf	19	;volatile
   946  0061                     i1l800:	
   947                           
   948                           ;SLAVE_I2C.c: 70:             SSPCONbits.CKP = 1;
   949  0061  1614               	bsf	20,4	;volatile
   950                           
   951                           ;SLAVE_I2C.c: 71:             _delay((unsigned long)((250)*(4000000/4000000.0)));
   952  0062  3053               	movlw	83
   953  0063  00F0               	movwf	??_isr
   954  0064                     u17_27:	
   955  0064  0BF0               	decfsz	??_isr,f
   956  0065  2864               	goto	u17_27
   957  0066                     i1l69:	
   958                           ;SLAVE_I2C.c: 72:             while(SSPSTATbits.BF);
   959                           
   960  0066  1683               	bsf	3,5	;RP0=1, select bank1
   961  0067  1303               	bcf	3,6	;RP1=0, select bank1
   962  0068  1814               	btfsc	20,0	;volatile
   963  0069  286B               	goto	u12_21
   964  006A  286C               	goto	u12_20
   965  006B                     u12_21:	
   966  006B  2866               	goto	i1l69
   967  006C                     u12_20:	
   968  006C                     i1l67:	
   969                           
   970                           ;SLAVE_I2C.c: 75:         PIR1bits.SSPIF = 0;
   971  006C  1283               	bcf	3,5	;RP0=0, select bank0
   972  006D  1303               	bcf	3,6	;RP1=0, select bank0
   973  006E  118C               	bcf	12,3	;volatile
   974  006F                     i1l72:	
   975  006F  0872               	movf	??_isr+2,w
   976  0070  008A               	movwf	10
   977  0071  0E71               	swapf	(??_isr+1)^(0+4294967168),w
   978  0072  0083               	movwf	3
   979  0073  0EFE               	swapf	btemp,f
   980  0074  0E7E               	swapf	btemp,w
   981  0075  0009               	retfie
   982  0076                     __end_of_isr:	
   983  007E                     btemp	set	126	;btemp
   984  007E                     wtemp0	set	126
   985                           
   986                           	psect	intentry
   987  0004                     __pintentry:	
   988                           ;incstack = 0
   989                           ; Regs used in _isr: [wreg]
   990                           
   991  0004                     interrupt_function:	
   992  007E                     saved_w	set	btemp
   993  0004  00FE               	movwf	btemp
   994  0005  0E03               	swapf	3,w
   995  0006  00F1               	movwf	??_isr+1
   996  0007  080A               	movf	10,w
   997  0008  00F2               	movwf	??_isr+2
   998  0009  120A  118A  2815   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Slave_Init
    _LOOP->_ANALOGICO

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                     _I2C_Slave_Init
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                          _ANALOGICO
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _LOOP
     _ANALOGICO

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 27 02:39:25 2020

                       _z 0075               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l80 00DB                        l77 00A6  
                      l86 00D0                        l89 00DA                        u10 00D4  
                      u11 00D3        __size_of_ANALOGICO 0018                       l144 00C2  
                     _ADC 0074                       l810 007D                       l802 0076  
                     l740 00CE                       l820 0084                       l812 007E  
                     l804 007A                       l750 00B8                       l742 00CF  
                     l830 008E                       l822 0085                       l814 0080  
                     l806 007B                       l760 00BF                       l752 00B9  
                     l744 00D4                       l736 00C3                       l840 0096  
                     l832 008F                       l824 0089                       l816 0081  
                     l808 007C                       l754 00BA                       l738 00CA  
                     l762 00DB                       l842 0099                       l834 0090  
                     l826 008A                       l818 0083                       l756 00BB  
                     l748 00AA                       l844 009A                       l836 0091  
                     l828 008D                       l758 00BC                       l846 009B  
                     l838 0095                       l848 00A1                       _GIE 005F  
                     u157 00C5              __CFG_CPD$OFF 0000                       _isr 0015  
            __CFG_LVP$OFF 0000                      ?_isr 0070                      _PEIE 005E  
                    i1l63 004C                      i1l64 003D                      i1l72 006F  
                    i1l67 006C                      i1l69 0066                      _LOOP 00DB  
                    u4_20 001B                      u4_21 001A                      u5_20 0020  
                    u5_21 001F                      u6_20 0024                      u6_21 0023  
                    u7_20 0031                      u7_21 0030                      u8_20 0035  
                    u8_21 0034                      u9_20 0043                      u9_21 0042  
            __CFG_WRT$OFF 0000                      _main 0076                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0070  
                   ?_LOOP 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l800 0061                     i1l770 001B  
                   i1l780 002A                     i1l772 0020                     i1l790 003C  
                   i1l782 002B                     i1l774 0024                     i1l792 0043  
                   i1l784 0031                     i1l776 0028                     i1l768 0015  
                   i1l794 0050                     i1l786 0035                     i1l778 0029  
                   i1l796 0054                     i1l788 003B                     i1l798 005A  
                   u10_20 0050                     u10_21 004F                     u11_20 0054  
                   u11_21 0053                     u12_20 006C                     u12_21 006B  
                   u16_27 0049                     u17_27 0064                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _SSPIE 0463  
                   _TRISE 0089                     _SSPIF 0063            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A         __end_of_ANALOGICO 00DB  
                   status 0003                     wtemp0 007E              __end_of_LOOP 00E2  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00A9  
                  ??_LOOP 0074                    ??_main 0074                    _ADRESH 001E  
                  _ANSELH 0189                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPBUF 0013                    _SSPCON 0014  
          __CFG_PWRTE$OFF 0000                    saved_w 007E   __end_of__initialization 0011  
          __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 001A     I2C_Slave_Init@address 0073  
              __pmaintext 0076                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                 _ANALOGICO 00C3                   __ptext1 00DB  
                 __ptext2 00C3                   __ptext3 00A9                   __ptext4 0015  
            __size_of_isr 0061      end_of_initialization 0011                ?_ANALOGICO 0070  
          _I2C_Slave_Init 00A9                 _TRISCbits 0087    __end_of_I2C_Slave_Init 00C3  
     start_initialization 000F               __end_of_isr 0076  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             ??_ANALOGICO 0073           ?_I2C_Slave_Init 0070               __pbssCOMMON 0074  
               ___latbits 0002         interrupt_function 0004                  _PIR1bits 000C  
              _ADCON0bits 001F                _ADCON1bits 009F         __CFG_BOR4V$BOR40V 0000  
           __size_of_LOOP 0007          ??_I2C_Slave_Init 0073             __size_of_main 0033  
                intlevel1 0000                _OSCCONbits 008F               _SSPCON2bits 0091  
              _SSPCONbits 0014  
