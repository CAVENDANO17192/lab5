

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 27 11:56:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0008                     _PORTDbits	set	8
   293  0009                     _PORTE	set	9
   294  0008                     _PORTD	set	8
   295  0007                     _PORTC	set	7
   296  0006                     _PORTB	set	6
   297  0005                     _PORTA	set	5
   298  0088                     _TRISDbits	set	136
   299  0089                     _TRISE	set	137
   300  0087                     _TRISC	set	135
   301  0088                     _TRISD	set	136
   302  0086                     _TRISB	set	134
   303  0085                     _TRISA	set	133
   304  0189                     _ANSELH	set	393
   305  0188                     _ANSEL	set	392
   306                           
   307                           	psect	strings
   308  0000'                    __pstrings:	
   309  0000'                    stringtab:	
   310  0000'                    __stringtab:	
   311  0000'                    stringcode:	
   312                           ;	String table - string pointers are 1 byte each
   313                           
   314  0000'                    stringdir:	
   315  0000' 3000'              	movlw	high stringdir
   316  0001' 008A               	movwf	10
   317  0002' 0804               	movf	4,w
   318  0003' 0A84               	incf	4,f
   319  0004' 0782               	addwf	2,f
   320  0005'                    __stringbase:	
   321  0005' 3400               	retlw	0
   322  0006'                    __end_of__stringtab:	
   323  0006'                    STR_2:	
   324  0006' 3420               	retlw	32	;' '
   325  0007' 3467               	retlw	103	;'g'
   326  0008' 3472               	retlw	114	;'r'
   327  0009' 3461               	retlw	97	;'a'
   328  000A' 3464               	retlw	100	;'d'
   329  000B' 346F               	retlw	111	;'o'
   330  000C' 3473               	retlw	115	;'s'
   331  000D' 3420               	retlw	32	;' '
   332  000E' 3420               	retlw	32	;' '
   333  000F' 3420               	retlw	32	;' '
   334  0010' 3400               	retlw	0
   335  0011'                    STR_3:	
   336  0011' 3448               	retlw	72	;'H'
   337  0012' 3475               	retlw	117	;'u'
   338  0013' 346D               	retlw	109	;'m'
   339  0014' 3465               	retlw	101	;'e'
   340  0015' 3464               	retlw	100	;'d'
   341  0016' 3461               	retlw	97	;'a'
   342  0017' 3464               	retlw	100	;'d'
   343  0018' 3420               	retlw	32	;' '
   344  0019' 343D               	retlw	61	;'='
   345  001A' 3420               	retlw	32	;' '
   346  001B' 3400               	retlw	0
   347  001C'                    STR_4:	
   348  001C' 3425               	retlw	37	;'%'
   349  001D' 3420               	retlw	32	;' '
   350  001E' 3420               	retlw	32	;' '
   351  001F' 3420               	retlw	32	;' '
   352  0020' 3420               	retlw	32	;' '
   353  0021' 3420               	retlw	32	;' '
   354  0022' 3420               	retlw	32	;' '
   355  0023' 3420               	retlw	32	;' '
   356  0024' 3420               	retlw	32	;' '
   357  0025' 3400               	retlw	0
   358  0026'                    STR_1:	
   359  0026' 3454               	retlw	84	;'T'
   360  0027' 3445               	retlw	69	;'E'
   361  0028' 344D               	retlw	77	;'M'
   362  0029' 3450               	retlw	80	;'P'
   363  002A' 3420               	retlw	32	;' '
   364  002B' 343D               	retlw	61	;'='
   365  002C' 3420               	retlw	32	;' '
   366  002D' 3400               	retlw	0
   367                           
   368                           ; #config settings
   369  0000                     
   370                           	psect	cinit
   371  0000'                    start_initialization:	
   372  0000'                    __initialization:	
   373                           
   374                           ; Clear objects allocated to BANK0
   375  0000' 1383               	bcf	3,7	;select IRP bank0
   376  0001' 3000'              	movlw	low __pbssBANK0
   377  0002' 0084               	movwf	4
   378  0003' 3000'              	movlw	low (__pbssBANK0+43)
   379  0004' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   380  0009'                    end_of_initialization:	
   381                           ;End of C runtime variable initialization code
   382                           
   383  0009'                    __end_of__initialization:	
   384  0009' 0183               	clrf	3
   385  000A' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   386                           
   387                           	psect	bssBANK0
   388  0000'                    __pbssBANK0:	
   389  0000'                    _sum:	
   390  0000'                    	ds	2
   391  0002'                    _decHR_int:	
   392  0002'                    	ds	2
   393  0004'                    _uniHR_int:	
   394  0004'                    	ds	2
   395  0006'                    _decT_int:	
   396  0006'                    	ds	2
   397  0008'                    _uniT_int:	
   398  0008'                    	ds	2
   399  000A'                    _decHR:	
   400  000A'                    	ds	2
   401  000C'                    _uniHR:	
   402  000C'                    	ds	2
   403  000E'                    _decT:	
   404  000E'                    	ds	2
   405  0010'                    _uniT:	
   406  0010'                    	ds	2
   407  0012'                    _RH_byte2:	
   408  0012'                    	ds	1
   409  0013'                    _RH_byte1:	
   410  0013'                    	ds	1
   411  0014'                    _T_byte2:	
   412  0014'                    	ds	1
   413  0015'                    _T_byte1:	
   414  0015'                    	ds	1
   415  0016'                    _check:	
   416  0016'                    	ds	1
   417  0017'                    _decHR_char:	
   418  0017'                    	ds	5
   419  001C'                    _uniHR_char:	
   420  001C'                    	ds	5
   421  0021'                    _decT_char:	
   422  0021'                    	ds	5
   423  0026'                    _uniT_char:	
   424  0026'                    	ds	5
   425                           
   426                           	psect	clrtext
   427  0000'                    clear_ram0:	
   428                           ;	Called with FSR containing the base address, and
   429                           ;	W with the last address+1
   430                           
   431  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   432  0001'                    clrloop0:	
   433  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   434  0002' 0A84               	incf	4,f	;increment pointer
   435  0003' 0604               	xorwf	4,w	;XOR with final address
   436  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   437  0005' 3400               	retlw	0	;all done for this memory range, return
   438  0006' 0604               	xorwf	4,w	;XOR again to restore value
   439  0007' 2800'              	goto	clrloop0	;do the next byte
   440                           
   441                           	psect	cstackCOMMON
   442  0000'                    __pcstackCOMMON:	
   443  0000'                    ?_inicializacion:	
   444  0000'                    ??_inicializacion:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0000'                    ?_LOOP:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0000'                    ?_START_DHT11:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0000'                    ??_START_DHT11:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0000'                    ?_CHECK_RESPONSE:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0000'                    ??_CHECK_RESPONSE:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0000'                    ?_ReadData:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0000'                    ??_ReadData:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0000'                    ?_strcat:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0000'                    ?_lcd_cmd:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0000'                    ??_lcd_cmd:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0000'                    ?_lcd_msg:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0000'                    ??_lcd_msg:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0000'                    ?_main:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0000'                    ?___awdiv:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0000'                    ?___awmod:	
   490                           ; 2 bytes @ 0x0
   491                           
   492  0000'                    ?___lwdiv:	
   493                           ; 2 bytes @ 0x0
   494                           
   495  0000'                    ?___lwmod:	
   496                           ; 2 bytes @ 0x0
   497                           
   498  0000'                    strcat@from:	
   499                           ; 2 bytes @ 0x0
   500                           
   501  0000'                    _lcd_msg$0:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0000'                    ___awdiv@divisor:	
   505                           ; 2 bytes @ 0x0
   506                           
   507  0000'                    ___awmod@divisor:	
   508                           ; 2 bytes @ 0x0
   509                           
   510  0000'                    ___lwdiv@divisor:	
   511                           ; 2 bytes @ 0x0
   512                           
   513  0000'                    ___lwmod@divisor:	
   514                           ; 2 bytes @ 0x0
   515                           
   516                           
   517                           ; 2 bytes @ 0x0
   518  0000'                    	ds	1
   519  0001'                    ??_strcat:	
   520                           
   521                           ; 1 bytes @ 0x1
   522  0001'                    	ds	1
   523  0002'                    ReadData@i:	
   524  0002'                    strcat@to:	
   525                           ; 1 bytes @ 0x2
   526                           
   527  0002'                    ___awdiv@dividend:	
   528                           ; 1 bytes @ 0x2
   529                           
   530  0002'                    ___awmod@dividend:	
   531                           ; 2 bytes @ 0x2
   532                           
   533  0002'                    ___lwdiv@dividend:	
   534                           ; 2 bytes @ 0x2
   535                           
   536  0002'                    ___lwmod@dividend:	
   537                           ; 2 bytes @ 0x2
   538                           
   539                           
   540                           ; 2 bytes @ 0x2
   541  0002'                    	ds	1
   542  0003'                    ReadData@j:	
   543  0003'                    strcat@cp:	
   544                           ; 1 bytes @ 0x3
   545                           
   546                           
   547                           ; 1 bytes @ 0x3
   548  0003'                    	ds	1
   549  0004'                    ??___awdiv:	
   550  0004'                    ??___awmod:	
   551                           ; 1 bytes @ 0x4
   552                           
   553  0004'                    ??___lwdiv:	
   554                           ; 1 bytes @ 0x4
   555                           
   556  0004'                    ??___lwmod:	
   557                           ; 1 bytes @ 0x4
   558                           
   559                           
   560                           ; 1 bytes @ 0x4
   561  0004'                    	ds	1
   562  0005'                    ___awdiv@counter:	
   563  0005'                    ___awmod@counter:	
   564                           ; 1 bytes @ 0x5
   565                           
   566  0005'                    ___lwmod@counter:	
   567                           ; 1 bytes @ 0x5
   568                           
   569  0005'                    ___lwdiv@quotient:	
   570                           ; 1 bytes @ 0x5
   571                           
   572                           
   573                           ; 2 bytes @ 0x5
   574  0005'                    	ds	1
   575  0006'                    ___awdiv@sign:	
   576  0006'                    ___awmod@sign:	
   577                           ; 1 bytes @ 0x6
   578                           
   579                           
   580                           ; 1 bytes @ 0x6
   581  0006'                    	ds	1
   582  0007'                    ___lwdiv@counter:	
   583  0007'                    ___awdiv@quotient:	
   584                           ; 1 bytes @ 0x7
   585                           
   586                           
   587                           ; 2 bytes @ 0x7
   588  0007'                    	ds	1
   589  0008'                    ?_utoa:	
   590  0008'                    utoa@val:	
   591                           ; 1 bytes @ 0x8
   592                           
   593                           
   594                           ; 2 bytes @ 0x8
   595  0008'                    	ds	2
   596  000A'                    utoa@base:	
   597                           
   598                           ; 2 bytes @ 0xA
   599  000A'                    	ds	2
   600  000C'                    ??_utoa:	
   601                           
   602                           ; 1 bytes @ 0xC
   603  000C'                    	ds	1
   604  000D'                    ??_itoa:	
   605                           
   606                           ; 1 bytes @ 0xD
   607  000D'                    	ds	1
   608  000E'                    ??_main:	
   609                           
   610                           	psect	cstackBANK0
   611  0000'                    __pcstackBANK0:	
   612                           ; 1 bytes @ 0xE
   613                           
   614  0000'                    utoa@v:	
   615                           
   616                           ; 2 bytes @ 0x0
   617  0000'                    	ds	2
   618  0002'                    utoa@c:	
   619                           
   620                           ; 1 bytes @ 0x2
   621  0002'                    	ds	1
   622  0003'                    utoa@buf:	
   623                           
   624                           ; 1 bytes @ 0x3
   625  0003'                    	ds	1
   626  0004'                    ?_itoa:	
   627  0004'                    itoa@val:	
   628                           ; 1 bytes @ 0x4
   629                           
   630                           
   631                           ; 2 bytes @ 0x4
   632  0004'                    	ds	2
   633  0006'                    itoa@base:	
   634                           
   635                           ; 2 bytes @ 0x6
   636  0006'                    	ds	3
   637  0009'                    itoa@buf:	
   638                           
   639                           ; 1 bytes @ 0x9
   640  0009'                    	ds	1
   641  000A'                    ??_LOOP:	
   642                           
   643                           ; 1 bytes @ 0xA
   644  000A'                    	ds	8
   645                           
   646                           	psect	maintext
   647  0000'                    __pmaintext:	
   648 ;;
   649 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   650 ;;
   651 ;; *************** function _main *****************
   652 ;; Defined at:
   653 ;;		line 79 in file "TEMP_PIC.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : B00/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0
   670 ;;      Totals:         0       0       0       0       0
   671 ;;Total ram usage:        0 bytes
   672 ;; Hardware stack levels required when called:    4
   673 ;; This function calls:
   674 ;;		_LOOP
   675 ;;		_inicializacion
   676 ;; This function is called by:
   677 ;;		Startup code after reset
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _main
   683  0000'                    _main:	
   684  0000'                    l1281:	
   685                           ;incstack = 0
   686                           ; Regs used in _main: [allreg]
   687                           
   688                           
   689                           ;TEMP_PIC.c: 82:     ANSEL = 0b00000000;
   690  0000' 1683               	bsf	3,5	;RP0=1, select bank3
   691  0001' 1703               	bsf	3,6	;RP1=1, select bank3
   692  0002' 0188               	clrf	8	;volatile
   693                           
   694                           ;TEMP_PIC.c: 83:     ANSELH= 0b00000000;
   695  0003' 0189               	clrf	9	;volatile
   696                           
   697                           ;TEMP_PIC.c: 84:     TRISA = 0b00000000;
   698  0004' 1683               	bsf	3,5	;RP0=1, select bank1
   699  0005' 1303               	bcf	3,6	;RP1=0, select bank1
   700  0006' 0185               	clrf	5	;volatile
   701                           
   702                           ;TEMP_PIC.c: 85:     TRISB = 0b00000000;
   703  0007' 0186               	clrf	6	;volatile
   704                           
   705                           ;TEMP_PIC.c: 86:     TRISD = 0b00000000;
   706  0008' 0188               	clrf	8	;volatile
   707                           
   708                           ;TEMP_PIC.c: 87:     TRISC = 0b00000000;
   709  0009' 0187               	clrf	7	;volatile
   710                           
   711                           ;TEMP_PIC.c: 88:     TRISE = 0;
   712  000A' 0189               	clrf	9	;volatile
   713                           
   714                           ;TEMP_PIC.c: 90:     PORTA = 0;
   715  000B' 1283               	bcf	3,5	;RP0=0, select bank0
   716  000C' 1303               	bcf	3,6	;RP1=0, select bank0
   717  000D' 0185               	clrf	5	;volatile
   718                           
   719                           ;TEMP_PIC.c: 91:     PORTB = 0;
   720  000E' 0186               	clrf	6	;volatile
   721                           
   722                           ;TEMP_PIC.c: 92:     PORTC = 0;
   723  000F' 0187               	clrf	7	;volatile
   724                           
   725                           ;TEMP_PIC.c: 93:     PORTD = 0;
   726  0010' 0188               	clrf	8	;volatile
   727                           
   728                           ;TEMP_PIC.c: 94:     PORTE = 0;
   729  0011' 0189               	clrf	9	;volatile
   730                           
   731                           ;TEMP_PIC.c: 98:     check = 0;
   732  0012' 0196'              	clrf	_check
   733  0013'                    l1283:	
   734                           
   735                           ;TEMP_PIC.c: 99:     inicializacion();
   736  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	_inicializacion
   737  0018'                    l1285:	
   738                           
   739                           ;TEMP_PIC.c: 102:     LOOP();
   740  0018' 120A' 118A' 2000' 120A' 118A' 	fcall	_LOOP
   741  001D'                    l89:	
   742  001D' 120A' 118A' 2800'  	ljmp	start
   743  0020'                    __end_of_main:	
   744                           
   745                           	psect	text1
   746  0000'                    __ptext1:	
   747 ;; *************** function _LOOP *****************
   748 ;; Defined at:
   749 ;;		line 107 in file "TEMP_PIC.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0
   765 ;;      Temps:          0       8       0       0       0
   766 ;;      Totals:         0       8       0       0       0
   767 ;;Total ram usage:        8 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    3
   770 ;; This function calls:
   771 ;;		_CHECK_RESPONSE
   772 ;;		_ReadData
   773 ;;		_START_DHT11
   774 ;;		___awdiv
   775 ;;		___awmod
   776 ;;		_itoa
   777 ;;		_lcd_cmd
   778 ;;		_lcd_msg
   779 ;;		_strcat
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           
   786                           ;psect for function _LOOP
   787  0000'                    _LOOP:	
   788  0000'                    l92:	
   789                           ;incstack = 0
   790                           ; Regs used in _LOOP: [allreg]
   791                           ;TEMP_PIC.c: 108:     while(1){
   792                           
   793  0000'                    l1239:	
   794                           
   795                           ;TEMP_PIC.c: 109:         START_DHT11();
   796  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_START_DHT11
   797                           
   798                           ;TEMP_PIC.c: 110:         CHECK_RESPONSE();
   799  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_CHECK_RESPONSE
   800  000A'                    l1241:	
   801                           
   802                           ;TEMP_PIC.c: 112:         if(check == 1){
   803  000A' 1283               	bcf	3,5	;RP0=0, select bank0
   804  000B' 1303               	bcf	3,6	;RP1=0, select bank0
   805  000C' 0316'              	decf	_check,w
   806  000D' 1D03               	btfss	3,2
   807  000E' 2800'              	goto	u951
   808  000F' 2800'              	goto	u950
   809  0010'                    u951:	
   810  0010' 2800'              	goto	l92
   811  0011'                    u950:	
   812  0011'                    l1243:	
   813                           
   814                           ;TEMP_PIC.c: 114:             RH_byte1 = ReadData();
   815  0011' 120A' 118A' 2000' 120A' 118A' 	fcall	_ReadData
   816  0016' 1283               	bcf	3,5	;RP0=0, select bank0
   817  0017' 1303               	bcf	3,6	;RP1=0, select bank0
   818  0018' 008A'              	movwf	??_LOOP
   819  0019' 080A'              	movf	??_LOOP,w
   820  001A' 0093'              	movwf	_RH_byte1
   821                           
   822                           ;TEMP_PIC.c: 115:             RH_byte2 = ReadData();
   823  001B' 120A' 118A' 2000' 120A' 118A' 	fcall	_ReadData
   824  0020' 1283               	bcf	3,5	;RP0=0, select bank0
   825  0021' 1303               	bcf	3,6	;RP1=0, select bank0
   826  0022' 008A'              	movwf	??_LOOP
   827  0023' 080A'              	movf	??_LOOP,w
   828  0024' 0092'              	movwf	_RH_byte2
   829                           
   830                           ;TEMP_PIC.c: 116:             T_byte1 = ReadData();
   831  0025' 120A' 118A' 2000' 120A' 118A' 	fcall	_ReadData
   832  002A' 1283               	bcf	3,5	;RP0=0, select bank0
   833  002B' 1303               	bcf	3,6	;RP1=0, select bank0
   834  002C' 008A'              	movwf	??_LOOP
   835  002D' 080A'              	movf	??_LOOP,w
   836  002E' 0095'              	movwf	_T_byte1
   837                           
   838                           ;TEMP_PIC.c: 117:             T_byte2 = ReadData();
   839  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	_ReadData
   840  0034' 1283               	bcf	3,5	;RP0=0, select bank0
   841  0035' 1303               	bcf	3,6	;RP1=0, select bank0
   842  0036' 008A'              	movwf	??_LOOP
   843  0037' 080A'              	movf	??_LOOP,w
   844  0038' 0094'              	movwf	_T_byte2
   845                           
   846                           ;TEMP_PIC.c: 118:             sum = ReadData();
   847  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	_ReadData
   848  003E' 1283               	bcf	3,5	;RP0=0, select bank0
   849  003F' 1303               	bcf	3,6	;RP1=0, select bank0
   850  0040' 008A'              	movwf	??_LOOP
   851  0041' 018B'              	clrf	??_LOOP+1
   852  0042' 080A'              	movf	??_LOOP,w
   853  0043' 0080'              	movwf	_sum
   854  0044' 080B'              	movf	??_LOOP+1,w
   855  0045' 0081'              	movwf	_sum+1
   856  0046'                    l1245:	
   857                           
   858                           ;TEMP_PIC.c: 119:             if(sum == ((RH_byte1+RH_byte2+T_byte1+T_byte2) & 0xFF)){
   859  0046' 0813'              	movf	_RH_byte1,w
   860  0047' 0712'              	addwf	_RH_byte2,w
   861  0048' 008A'              	movwf	??_LOOP
   862  0049' 018B'              	clrf	??_LOOP+1
   863  004A' 0D8B'              	rlf	??_LOOP+1,f
   864  004B' 0815'              	movf	_T_byte1,w
   865  004C' 070A'              	addwf	??_LOOP,w
   866  004D' 008C'              	movwf	??_LOOP+2
   867  004E' 3000               	movlw	0
   868  004F' 1803               	skipnc
   869  0050' 3001               	movlw	1
   870  0051' 070B'              	addwf	??_LOOP+1,w
   871  0052' 008D'              	movwf	??_LOOP+3
   872  0053' 0814'              	movf	_T_byte2,w
   873  0054' 070C'              	addwf	??_LOOP+2,w
   874  0055' 008E'              	movwf	??_LOOP+4
   875  0056' 3000               	movlw	0
   876  0057' 1803               	skipnc
   877  0058' 3001               	movlw	1
   878  0059' 070D'              	addwf	??_LOOP+3,w
   879  005A' 008F'              	movwf	??_LOOP+5
   880  005B' 30FF               	movlw	255
   881  005C' 050E'              	andwf	??_LOOP+4,w
   882  005D' 0090'              	movwf	??_LOOP+6
   883  005E' 3000               	movlw	0
   884  005F' 050F'              	andwf	??_LOOP+5,w
   885  0060' 0091'              	movwf	??_LOOP+7
   886  0061' 0801'              	movf	_sum+1,w
   887  0062' 0611'              	xorwf	??_LOOP+7,w
   888  0063' 1D03               	skipz
   889  0064' 2800'              	goto	u965
   890  0065' 0800'              	movf	_sum,w
   891  0066' 0610'              	xorwf	??_LOOP+6,w
   892  0067'                    u965:	
   893  0067' 1D03               	skipz
   894  0068' 2800'              	goto	u961
   895  0069' 2800'              	goto	u960
   896  006A'                    u961:	
   897  006A' 2800'              	goto	l92
   898  006B'                    u960:	
   899  006B'                    l1247:	
   900                           
   901                           ;TEMP_PIC.c: 120:               decHR = RH_byte1/10;
   902  006B' 300A               	movlw	10
   903  006C' 0080'              	movwf	___awdiv@divisor
   904  006D' 3000               	movlw	0
   905  006E' 0081'              	movwf	___awdiv@divisor+1
   906  006F' 0813'              	movf	_RH_byte1,w
   907  0070' 008A'              	movwf	??_LOOP
   908  0071' 018B'              	clrf	??_LOOP+1
   909  0072' 080A'              	movf	??_LOOP,w
   910  0073' 0082'              	movwf	___awdiv@dividend
   911  0074' 080B'              	movf	??_LOOP+1,w
   912  0075' 0083'              	movwf	___awdiv@dividend+1
   913  0076' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
   914  007B' 0801'              	movf	?___awdiv+1,w
   915  007C' 1283               	bcf	3,5	;RP0=0, select bank0
   916  007D' 1303               	bcf	3,6	;RP1=0, select bank0
   917  007E' 008B'              	movwf	_decHR+1
   918  007F' 0800'              	movf	?___awdiv,w
   919  0080' 008A'              	movwf	_decHR
   920  0081'                    l1249:	
   921                           
   922                           ;TEMP_PIC.c: 121:               itoa(decHR_char,decHR,10);
   923  0081' 080B'              	movf	_decHR+1,w
   924  0082' 0085'              	movwf	itoa@val+1
   925  0083' 080A'              	movf	_decHR,w
   926  0084' 0084'              	movwf	itoa@val
   927  0085' 300A               	movlw	10
   928  0086' 0086'              	movwf	itoa@base
   929  0087' 3000               	movlw	0
   930  0088' 0087'              	movwf	itoa@base+1
   931  0089' 3000'              	movlw	(low (_decHR_char| 0))& (0+255)
   932  008A' 120A' 118A' 2000' 120A' 118A' 	fcall	_itoa
   933  008F'                    l1251:	
   934                           
   935                           ;TEMP_PIC.c: 122:               uniHR = RH_byte1%10;
   936  008F' 300A               	movlw	10
   937  0090' 0080'              	movwf	___awmod@divisor
   938  0091' 3000               	movlw	0
   939  0092' 0081'              	movwf	___awmod@divisor+1
   940  0093' 1283               	bcf	3,5	;RP0=0, select bank0
   941  0094' 1303               	bcf	3,6	;RP1=0, select bank0
   942  0095' 0813'              	movf	_RH_byte1,w
   943  0096' 008A'              	movwf	??_LOOP
   944  0097' 018B'              	clrf	??_LOOP+1
   945  0098' 080A'              	movf	??_LOOP,w
   946  0099' 0082'              	movwf	___awmod@dividend
   947  009A' 080B'              	movf	??_LOOP+1,w
   948  009B' 0083'              	movwf	___awmod@dividend+1
   949  009C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
   950  00A1' 0801'              	movf	?___awmod+1,w
   951  00A2' 1283               	bcf	3,5	;RP0=0, select bank0
   952  00A3' 1303               	bcf	3,6	;RP1=0, select bank0
   953  00A4' 008D'              	movwf	_uniHR+1
   954  00A5' 0800'              	movf	?___awmod,w
   955  00A6' 008C'              	movwf	_uniHR
   956                           
   957                           ;TEMP_PIC.c: 123:               itoa(uniHR_char,uniHR,10);
   958  00A7' 080D'              	movf	_uniHR+1,w
   959  00A8' 0085'              	movwf	itoa@val+1
   960  00A9' 080C'              	movf	_uniHR,w
   961  00AA' 0084'              	movwf	itoa@val
   962  00AB' 300A               	movlw	10
   963  00AC' 0086'              	movwf	itoa@base
   964  00AD' 3000               	movlw	0
   965  00AE' 0087'              	movwf	itoa@base+1
   966  00AF' 3000'              	movlw	(low (_uniHR_char| 0))& (0+255)
   967  00B0' 120A' 118A' 2000' 120A' 118A' 	fcall	_itoa
   968  00B5'                    l1253:	
   969                           
   970                           ;TEMP_PIC.c: 124:               decT = T_byte1/10;
   971  00B5' 300A               	movlw	10
   972  00B6' 0080'              	movwf	___awdiv@divisor
   973  00B7' 3000               	movlw	0
   974  00B8' 0081'              	movwf	___awdiv@divisor+1
   975  00B9' 1283               	bcf	3,5	;RP0=0, select bank0
   976  00BA' 1303               	bcf	3,6	;RP1=0, select bank0
   977  00BB' 0815'              	movf	_T_byte1,w
   978  00BC' 008A'              	movwf	??_LOOP
   979  00BD' 018B'              	clrf	??_LOOP+1
   980  00BE' 080A'              	movf	??_LOOP,w
   981  00BF' 0082'              	movwf	___awdiv@dividend
   982  00C0' 080B'              	movf	??_LOOP+1,w
   983  00C1' 0083'              	movwf	___awdiv@dividend+1
   984  00C2' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
   985  00C7' 0801'              	movf	?___awdiv+1,w
   986  00C8' 1283               	bcf	3,5	;RP0=0, select bank0
   987  00C9' 1303               	bcf	3,6	;RP1=0, select bank0
   988  00CA' 008F'              	movwf	_decT+1
   989  00CB' 0800'              	movf	?___awdiv,w
   990  00CC' 008E'              	movwf	_decT
   991  00CD'                    l1255:	
   992                           
   993                           ;TEMP_PIC.c: 125:               itoa(decT_char,decT,10);
   994  00CD' 080F'              	movf	_decT+1,w
   995  00CE' 0085'              	movwf	itoa@val+1
   996  00CF' 080E'              	movf	_decT,w
   997  00D0' 0084'              	movwf	itoa@val
   998  00D1' 300A               	movlw	10
   999  00D2' 0086'              	movwf	itoa@base
  1000  00D3' 3000               	movlw	0
  1001  00D4' 0087'              	movwf	itoa@base+1
  1002  00D5' 3000'              	movlw	(low (_decT_char| 0))& (0+255)
  1003  00D6' 120A' 118A' 2000' 120A' 118A' 	fcall	_itoa
  1004                           
  1005                           ;TEMP_PIC.c: 126:               uniT = T_byte1%10;
  1006  00DB' 300A               	movlw	10
  1007  00DC' 0080'              	movwf	___awmod@divisor
  1008  00DD' 3000               	movlw	0
  1009  00DE' 0081'              	movwf	___awmod@divisor+1
  1010  00DF' 1283               	bcf	3,5	;RP0=0, select bank0
  1011  00E0' 1303               	bcf	3,6	;RP1=0, select bank0
  1012  00E1' 0815'              	movf	_T_byte1,w
  1013  00E2' 008A'              	movwf	??_LOOP
  1014  00E3' 018B'              	clrf	??_LOOP+1
  1015  00E4' 080A'              	movf	??_LOOP,w
  1016  00E5' 0082'              	movwf	___awmod@dividend
  1017  00E6' 080B'              	movf	??_LOOP+1,w
  1018  00E7' 0083'              	movwf	___awmod@dividend+1
  1019  00E8' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  1020  00ED' 0801'              	movf	?___awmod+1,w
  1021  00EE' 1283               	bcf	3,5	;RP0=0, select bank0
  1022  00EF' 1303               	bcf	3,6	;RP1=0, select bank0
  1023  00F0' 0091'              	movwf	_uniT+1
  1024  00F1' 0800'              	movf	?___awmod,w
  1025  00F2' 0090'              	movwf	_uniT
  1026  00F3'                    l1257:	
  1027                           
  1028                           ;TEMP_PIC.c: 127:               itoa(uniT_char,uniT ,10);
  1029  00F3' 0811'              	movf	_uniT+1,w
  1030  00F4' 0085'              	movwf	itoa@val+1
  1031  00F5' 0810'              	movf	_uniT,w
  1032  00F6' 0084'              	movwf	itoa@val
  1033  00F7' 300A               	movlw	10
  1034  00F8' 0086'              	movwf	itoa@base
  1035  00F9' 3000               	movlw	0
  1036  00FA' 0087'              	movwf	itoa@base+1
  1037  00FB' 3000'              	movlw	(low (_uniT_char| 0))& (0+255)
  1038  00FC' 120A' 118A' 2000' 120A' 118A' 	fcall	_itoa
  1039  0101'                    l1259:	
  1040                           
  1041                           ;TEMP_PIC.c: 128:               strcat(decHR_char,uniHR_char);
  1042  0101' 3000'              	movlw	(low (_uniHR_char| 0))& (0+255)
  1043  0102' 1283               	bcf	3,5	;RP0=0, select bank0
  1044  0103' 1303               	bcf	3,6	;RP1=0, select bank0
  1045  0104' 008A'              	movwf	??_LOOP
  1046  0105' 080A'              	movf	??_LOOP,w
  1047  0106' 0080'              	movwf	strcat@from
  1048  0107' 3000'              	movlw	(low (_decHR_char| 0))& (0+255)
  1049  0108' 120A' 118A' 2000' 120A' 118A' 	fcall	_strcat
  1050  010D'                    l1261:	
  1051                           
  1052                           ;TEMP_PIC.c: 129:               strcat(decT_char,uniT_char);
  1053  010D' 3000'              	movlw	(low (_uniT_char| 0))& (0+255)
  1054  010E' 1283               	bcf	3,5	;RP0=0, select bank0
  1055  010F' 1303               	bcf	3,6	;RP1=0, select bank0
  1056  0110' 008A'              	movwf	??_LOOP
  1057  0111' 080A'              	movf	??_LOOP,w
  1058  0112' 0080'              	movwf	strcat@from
  1059  0113' 3000'              	movlw	(low (_decT_char| 0))& (0+255)
  1060  0114' 120A' 118A' 2000' 120A' 118A' 	fcall	_strcat
  1061  0119'                    l1263:	
  1062                           
  1063                           ;TEMP_PIC.c: 133:               lcd_cmd(0x01);
  1064  0119' 3001               	movlw	1
  1065  011A' 120A' 118A' 2000' 120A' 118A' 	fcall	_lcd_cmd
  1066  011F'                    l1265:	
  1067                           
  1068                           ;TEMP_PIC.c: 134:               lcd_msg("TEMP = ");
  1069  011F' 3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1070  0120' 0080'              	movwf	_lcd_msg$0
  1071  0121' 3080               	movlw	128
  1072  0122' 0081'              	movwf	_lcd_msg$0+1
  1073  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	_lcd_msg
  1074  0128'                    l1267:	
  1075                           
  1076                           ;TEMP_PIC.c: 135:               lcd_msg(decT_char);
  1077  0128' 3000'              	movlw	(low (_decT_char| 0))& (0+255)
  1078  0129' 0080'              	movwf	_lcd_msg$0
  1079  012A' 3000               	movlw	0
  1080  012B' 0081'              	movwf	_lcd_msg$0+1
  1081  012C' 120A' 118A' 2000' 120A' 118A' 	fcall	_lcd_msg
  1082  0131'                    l1269:	
  1083                           
  1084                           ;TEMP_PIC.c: 136:               lcd_msg(" grados   ");
  1085  0131' 3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1086  0132' 0080'              	movwf	_lcd_msg$0
  1087  0133' 3080               	movlw	128
  1088  0134' 0081'              	movwf	_lcd_msg$0+1
  1089  0135' 120A' 118A' 2000' 120A' 118A' 	fcall	_lcd_msg
  1090  013A'                    l1271:	
  1091                           
  1092                           ;TEMP_PIC.c: 137:               _delay((unsigned long)((3)*(8000000/4000.0)));
  1093  013A' 3008               	movlw	8
  1094  013B' 1283               	bcf	3,5	;RP0=0, select bank0
  1095  013C' 1303               	bcf	3,6	;RP1=0, select bank0
  1096  013D' 008B'              	movwf	??_LOOP+1
  1097  013E' 30C9               	movlw	201
  1098  013F' 008A'              	movwf	??_LOOP
  1099  0140'                    u977:	
  1100  0140' 0B8A'              	decfsz	??_LOOP,f
  1101  0141' 2800'              	goto	u977
  1102  0142' 0B8B'              	decfsz	??_LOOP+1,f
  1103  0143' 2800'              	goto	u977
  1104  0144'                    l1273:	
  1105                           
  1106                           ;TEMP_PIC.c: 138:               lcd_cmd(0xC0);
  1107  0144' 30C0               	movlw	192
  1108  0145' 120A' 118A' 2000' 120A' 118A' 	fcall	_lcd_cmd
  1109  014A'                    l1275:	
  1110                           
  1111                           ;TEMP_PIC.c: 139:               lcd_msg("Humedad = ");
  1112  014A' 300C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1113  014B' 0080'              	movwf	_lcd_msg$0
  1114  014C' 3080               	movlw	128
  1115  014D' 0081'              	movwf	_lcd_msg$0+1
  1116  014E' 120A' 118A' 2000' 120A' 118A' 	fcall	_lcd_msg
  1117  0153'                    l1277:	
  1118                           
  1119                           ;TEMP_PIC.c: 140:               lcd_msg(decHR_char);
  1120  0153' 3000'              	movlw	(low (_decHR_char| 0))& (0+255)
  1121  0154' 0080'              	movwf	_lcd_msg$0
  1122  0155' 3000               	movlw	0
  1123  0156' 0081'              	movwf	_lcd_msg$0+1
  1124  0157' 120A' 118A' 2000' 120A' 118A' 	fcall	_lcd_msg
  1125  015C'                    l1279:	
  1126                           
  1127                           ;TEMP_PIC.c: 141:               lcd_msg("%        ");
  1128  015C' 3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1129  015D' 0080'              	movwf	_lcd_msg$0
  1130  015E' 3080               	movlw	128
  1131  015F' 0081'              	movwf	_lcd_msg$0+1
  1132  0160' 120A' 118A' 2000' 120A' 118A' 	fcall	_lcd_msg
  1133  0165' 2800'              	goto	l92
  1134  0166' 0008               	return
  1135  0167'                    __end_of_LOOP:	
  1136                           
  1137                           	psect	text2
  1138  0000'                    __ptext2:	
  1139 ;; *************** function _strcat *****************
  1140 ;; Defined at:
  1141 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  to              1    wreg     PTR unsigned char 
  1144 ;;		 -> decT_char(5), decHR_char(5), 
  1145 ;;  from            1    0[COMMON] PTR const unsigned char 
  1146 ;;		 -> uniT_char(5), uniHR_char(5), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  to              1    2[COMMON] PTR unsigned char 
  1149 ;;		 -> decT_char(5), decHR_char(5), 
  1150 ;;  cp              1    3[COMMON] PTR unsigned char 
  1151 ;;		 -> decT_char(5), decHR_char(5), 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      PTR unsigned char 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         1       0       0       0       0
  1162 ;;      Locals:         2       0       0       0       0
  1163 ;;      Temps:          1       0       0       0       0
  1164 ;;      Totals:         4       0       0       0       0
  1165 ;;Total ram usage:        4 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_LOOP
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _strcat
  1176  0000'                    _strcat:	
  1177                           
  1178                           ;incstack = 0
  1179                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1180                           ;strcat@to stored from wreg
  1181  0000' 0082'              	movwf	strcat@to
  1182  0001'                    l1147:	
  1183  0001' 0802'              	movf	strcat@to,w
  1184  0002' 0081'              	movwf	??_strcat
  1185  0003' 0801'              	movf	??_strcat,w
  1186  0004' 0083'              	movwf	strcat@cp
  1187  0005' 2800'              	goto	l1151
  1188  0006'                    l1149:	
  1189  0006' 3001               	movlw	1
  1190  0007' 0081'              	movwf	??_strcat
  1191  0008' 0801'              	movf	??_strcat,w
  1192  0009' 0783'              	addwf	strcat@cp,f
  1193  000A'                    l1151:	
  1194  000A' 0803'              	movf	strcat@cp,w
  1195  000B' 0084               	movwf	4
  1196  000C' 1383               	bcf	3,7	;select IRP bank0
  1197  000D' 0800               	movf	0,w
  1198  000E' 1D03               	btfss	3,2
  1199  000F' 2800'              	goto	u741
  1200  0010' 2800'              	goto	u740
  1201  0011'                    u741:	
  1202  0011' 2800'              	goto	l1149
  1203  0012'                    u740:	
  1204  0012' 2800'              	goto	l1155
  1205  0013'                    l1153:	
  1206  0013' 3001               	movlw	1
  1207  0014' 0081'              	movwf	??_strcat
  1208  0015' 0801'              	movf	??_strcat,w
  1209  0016' 0783'              	addwf	strcat@cp,f
  1210  0017' 3001               	movlw	1
  1211  0018' 0081'              	movwf	??_strcat
  1212  0019' 0801'              	movf	??_strcat,w
  1213  001A' 0780'              	addwf	strcat@from,f
  1214  001B'                    l1155:	
  1215  001B' 0800'              	movf	strcat@from,w
  1216  001C' 0084               	movwf	4
  1217  001D' 0800               	movf	0,w
  1218  001E' 0081'              	movwf	??_strcat
  1219  001F' 0803'              	movf	strcat@cp,w
  1220  0020' 0084               	movwf	4
  1221  0021' 0801'              	movf	??_strcat,w
  1222  0022' 0080               	movwf	0
  1223  0023' 0800               	movf	0,w
  1224  0024' 1D03               	btfss	3,2
  1225  0025' 2800'              	goto	u751
  1226  0026' 2800'              	goto	u750
  1227  0027'                    u751:	
  1228  0027' 2800'              	goto	l1153
  1229  0028'                    u750:	
  1230  0028'                    l669:	
  1231  0028' 0008               	return
  1232  0029'                    __end_of_strcat:	
  1233                           
  1234                           	psect	text3
  1235  0000'                    __ptext3:	
  1236 ;; *************** function _itoa *****************
  1237 ;; Defined at:
  1238 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  buf             1    wreg     PTR unsigned char 
  1241 ;;		 -> uniT_char(5), decT_char(5), uniHR_char(5), decHR_char(5), 
  1242 ;;  val             2    4[BANK0 ] int 
  1243 ;;  base            2    6[BANK0 ] int 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1246 ;;		 -> uniT_char(5), decT_char(5), uniHR_char(5), decHR_char(5), 
  1247 ;;  cp              1    0        PTR unsigned char 
  1248 ;;		 -> uniT_char(5), decT_char(5), uniHR_char(5), decHR_char(5), 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      PTR unsigned char 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         0       4       0       0       0
  1259 ;;      Locals:         0       2       0       0       0
  1260 ;;      Temps:          1       0       0       0       0
  1261 ;;      Totals:         1       6       0       0       0
  1262 ;;Total ram usage:        7 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    2
  1265 ;; This function calls:
  1266 ;;		_utoa
  1267 ;; This function is called by:
  1268 ;;		_LOOP
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           
  1273                           ;psect for function _itoa
  1274  0000'                    _itoa:	
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1278                           ;itoa@buf stored from wreg
  1279  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1280  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1281  0002' 0089'              	movwf	itoa@buf
  1282  0003'                    l1133:	
  1283  0003'                    l1135:	
  1284  0003' 1F85'              	btfss	itoa@val+1,7
  1285  0004' 2800'              	goto	u731
  1286  0005' 2800'              	goto	u730
  1287  0006'                    u731:	
  1288  0006' 2800'              	goto	l1143
  1289  0007'                    u730:	
  1290  0007'                    l1137:	
  1291  0007' 302D               	movlw	45
  1292  0008' 008D'              	movwf	??_itoa
  1293  0009' 0809'              	movf	itoa@buf,w
  1294  000A' 0084               	movwf	4
  1295  000B' 080D'              	movf	??_itoa,w
  1296  000C' 1383               	bcf	3,7	;select IRP bank0
  1297  000D' 0080               	movwf	0
  1298  000E'                    l1139:	
  1299  000E' 3001               	movlw	1
  1300  000F' 008D'              	movwf	??_itoa
  1301  0010' 080D'              	movf	??_itoa,w
  1302  0011' 0789'              	addwf	itoa@buf,f
  1303  0012'                    l1141:	
  1304  0012' 0984'              	comf	itoa@val,f
  1305  0013' 0985'              	comf	itoa@val+1,f
  1306  0014' 0A84'              	incf	itoa@val,f
  1307  0015' 1903               	skipnz
  1308  0016' 0A85'              	incf	itoa@val+1,f
  1309  0017'                    l1143:	
  1310  0017' 0805'              	movf	itoa@val+1,w
  1311  0018' 0089'              	movwf	utoa@val+1
  1312  0019' 0804'              	movf	itoa@val,w
  1313  001A' 0088'              	movwf	utoa@val
  1314  001B' 0807'              	movf	itoa@base+1,w
  1315  001C' 008B'              	movwf	utoa@base+1
  1316  001D' 0806'              	movf	itoa@base,w
  1317  001E' 008A'              	movwf	utoa@base
  1318  001F' 0809'              	movf	itoa@buf,w
  1319  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	_utoa
  1320  0025'                    l652:	
  1321  0025' 0008               	return
  1322  0026'                    __end_of_itoa:	
  1323                           
  1324                           	psect	text4
  1325  0000'                    __ptext4:	
  1326 ;; *************** function _utoa *****************
  1327 ;; Defined at:
  1328 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  buf             1    wreg     PTR unsigned char 
  1331 ;;		 -> uniT_char(5), decT_char(5), uniHR_char(5), decHR_char(5), 
  1332 ;;  val             2    8[COMMON] unsigned int 
  1333 ;;  base            2   10[COMMON] int 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1336 ;;		 -> uniT_char(5), decT_char(5), uniHR_char(5), decHR_char(5), 
  1337 ;;  v               2    0[BANK0 ] unsigned int 
  1338 ;;  c               1    2[BANK0 ] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      PTR unsigned char 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         4       0       0       0       0
  1349 ;;      Locals:         0       4       0       0       0
  1350 ;;      Temps:          1       0       0       0       0
  1351 ;;      Totals:         5       4       0       0       0
  1352 ;;Total ram usage:        9 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    1
  1355 ;; This function calls:
  1356 ;;		___lwdiv
  1357 ;;		___lwmod
  1358 ;; This function is called by:
  1359 ;;		_itoa
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _utoa
  1365  0000'                    _utoa:	
  1366                           
  1367                           ;incstack = 0
  1368                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1369                           ;utoa@buf stored from wreg
  1370  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1371  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1372  0002' 0083'              	movwf	utoa@buf
  1373  0003'                    l1059:	
  1374  0003' 0809'              	movf	utoa@val+1,w
  1375  0004' 0081'              	movwf	utoa@v+1
  1376  0005' 0808'              	movf	utoa@val,w
  1377  0006' 0080'              	movwf	utoa@v
  1378  0007'                    l1061:	
  1379  0007' 080B'              	movf	utoa@base+1,w
  1380  0008' 0081'              	movwf	___lwdiv@divisor+1
  1381  0009' 080A'              	movf	utoa@base,w
  1382  000A' 0080'              	movwf	___lwdiv@divisor
  1383  000B' 0801'              	movf	utoa@v+1,w
  1384  000C' 0083'              	movwf	___lwdiv@dividend+1
  1385  000D' 0800'              	movf	utoa@v,w
  1386  000E' 0082'              	movwf	___lwdiv@dividend
  1387  000F' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  1388  0014' 0801'              	movf	?___lwdiv+1,w
  1389  0015' 1283               	bcf	3,5	;RP0=0, select bank0
  1390  0016' 1303               	bcf	3,6	;RP1=0, select bank0
  1391  0017' 0081'              	movwf	utoa@v+1
  1392  0018' 0800'              	movf	?___lwdiv,w
  1393  0019' 0080'              	movwf	utoa@v
  1394  001A'                    l1063:	
  1395  001A' 3001               	movlw	1
  1396  001B' 008C'              	movwf	??_utoa
  1397  001C' 080C'              	movf	??_utoa,w
  1398  001D' 0783'              	addwf	utoa@buf,f
  1399  001E'                    l1065:	
  1400  001E' 0800'              	movf	utoa@v,w
  1401  001F' 0401'              	iorwf	utoa@v+1,w
  1402  0020' 1D03               	btfss	3,2
  1403  0021' 2800'              	goto	u621
  1404  0022' 2800'              	goto	u620
  1405  0023'                    u621:	
  1406  0023' 2800'              	goto	l1061
  1407  0024'                    u620:	
  1408  0024'                    l1067:	
  1409  0024' 0803'              	movf	utoa@buf,w
  1410  0025' 0084               	movwf	4
  1411  0026' 1383               	bcf	3,7	;select IRP bank0
  1412  0027' 0180               	clrf	0
  1413  0028'                    l1069:	
  1414  0028' 3001               	movlw	1
  1415  0029' 0283'              	subwf	utoa@buf,f
  1416  002A'                    l1071:	
  1417  002A' 080B'              	movf	utoa@base+1,w
  1418  002B' 0081'              	movwf	___lwmod@divisor+1
  1419  002C' 080A'              	movf	utoa@base,w
  1420  002D' 0080'              	movwf	___lwmod@divisor
  1421  002E' 0809'              	movf	utoa@val+1,w
  1422  002F' 0083'              	movwf	___lwmod@dividend+1
  1423  0030' 0808'              	movf	utoa@val,w
  1424  0031' 0082'              	movwf	___lwmod@dividend
  1425  0032' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  1426  0037' 0800'              	movf	?___lwmod,w
  1427  0038' 008C'              	movwf	??_utoa
  1428  0039' 080C'              	movf	??_utoa,w
  1429  003A' 1283               	bcf	3,5	;RP0=0, select bank0
  1430  003B' 1303               	bcf	3,6	;RP1=0, select bank0
  1431  003C' 0082'              	movwf	utoa@c
  1432  003D'                    l1073:	
  1433  003D' 080B'              	movf	utoa@base+1,w
  1434  003E' 0081'              	movwf	___lwdiv@divisor+1
  1435  003F' 080A'              	movf	utoa@base,w
  1436  0040' 0080'              	movwf	___lwdiv@divisor
  1437  0041' 0809'              	movf	utoa@val+1,w
  1438  0042' 0083'              	movwf	___lwdiv@dividend+1
  1439  0043' 0808'              	movf	utoa@val,w
  1440  0044' 0082'              	movwf	___lwdiv@dividend
  1441  0045' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  1442  004A' 0801'              	movf	?___lwdiv+1,w
  1443  004B' 0089'              	movwf	utoa@val+1
  1444  004C' 0800'              	movf	?___lwdiv,w
  1445  004D' 0088'              	movwf	utoa@val
  1446  004E'                    l1075:	
  1447  004E' 300A               	movlw	10
  1448  004F' 1283               	bcf	3,5	;RP0=0, select bank0
  1449  0050' 1303               	bcf	3,6	;RP1=0, select bank0
  1450  0051' 0202'              	subwf	utoa@c,w
  1451  0052' 1C03               	skipc
  1452  0053' 2800'              	goto	u631
  1453  0054' 2800'              	goto	u630
  1454  0055'                    u631:	
  1455  0055' 2800'              	goto	l658
  1456  0056'                    u630:	
  1457  0056'                    l1077:	
  1458  0056' 3007               	movlw	7
  1459  0057' 008C'              	movwf	??_utoa
  1460  0058' 080C'              	movf	??_utoa,w
  1461  0059' 0782'              	addwf	utoa@c,f
  1462  005A'                    l658:	
  1463  005A' 3030               	movlw	48
  1464  005B' 008C'              	movwf	??_utoa
  1465  005C' 080C'              	movf	??_utoa,w
  1466  005D' 0782'              	addwf	utoa@c,f
  1467  005E'                    l1079:	
  1468  005E' 0802'              	movf	utoa@c,w
  1469  005F' 008C'              	movwf	??_utoa
  1470  0060' 0803'              	movf	utoa@buf,w
  1471  0061' 0084               	movwf	4
  1472  0062' 080C'              	movf	??_utoa,w
  1473  0063' 1383               	bcf	3,7	;select IRP bank0
  1474  0064' 0080               	movwf	0
  1475  0065'                    l1081:	
  1476  0065' 3001               	movlw	1
  1477  0066' 0283'              	subwf	utoa@buf,f
  1478  0067'                    l1083:	
  1479  0067' 0808'              	movf	utoa@val,w
  1480  0068' 0409'              	iorwf	utoa@val+1,w
  1481  0069' 1D03               	btfss	3,2
  1482  006A' 2800'              	goto	u641
  1483  006B' 2800'              	goto	u640
  1484  006C'                    u641:	
  1485  006C' 2800'              	goto	l1071
  1486  006D'                    u640:	
  1487  006D'                    l1085:	
  1488                           
  1489                           ;	Return value of _utoa is never used
  1490  006D' 3001               	movlw	1
  1491  006E' 008C'              	movwf	??_utoa
  1492  006F' 080C'              	movf	??_utoa,w
  1493  0070' 0783'              	addwf	utoa@buf,f
  1494  0071'                    l660:	
  1495  0071' 0008               	return
  1496  0072'                    __end_of_utoa:	
  1497                           
  1498                           	psect	text5
  1499  0000'                    __ptext5:	
  1500 ;; *************** function ___lwmod *****************
  1501 ;; Defined at:
  1502 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  divisor         2    0[COMMON] unsigned int 
  1505 ;;  dividend        2    2[COMMON] unsigned int 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  counter         1    5[COMMON] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  2    0[COMMON] unsigned int 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1517 ;;      Params:         4       0       0       0       0
  1518 ;;      Locals:         1       0       0       0       0
  1519 ;;      Temps:          1       0       0       0       0
  1520 ;;      Totals:         6       0       0       0       0
  1521 ;;Total ram usage:        6 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_utoa
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           
  1531                           ;psect for function ___lwmod
  1532  0000'                    ___lwmod:	
  1533  0000'                    l1037:	
  1534                           ;incstack = 0
  1535                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1536                           
  1537  0000' 0800'              	movf	___lwmod@divisor,w
  1538  0001' 0401'              	iorwf	___lwmod@divisor+1,w
  1539  0002' 1903               	btfsc	3,2
  1540  0003' 2800'              	goto	u561
  1541  0004' 2800'              	goto	u560
  1542  0005'                    u561:	
  1543  0005' 2800'              	goto	l1055
  1544  0006'                    u560:	
  1545  0006'                    l1039:	
  1546  0006' 0185'              	clrf	___lwmod@counter
  1547  0007' 0A85'              	incf	___lwmod@counter,f
  1548  0008' 2800'              	goto	l1045
  1549  0009'                    l1041:	
  1550  0009' 3001               	movlw	1
  1551  000A'                    u575:	
  1552  000A' 1003               	clrc
  1553  000B' 0D80'              	rlf	___lwmod@divisor,f
  1554  000C' 0D81'              	rlf	___lwmod@divisor+1,f
  1555  000D' 3EFF               	addlw	-1
  1556  000E' 1D03               	skipz
  1557  000F' 2800'              	goto	u575
  1558  0010'                    l1043:	
  1559  0010' 3001               	movlw	1
  1560  0011' 0084'              	movwf	??___lwmod
  1561  0012' 0804'              	movf	??___lwmod,w
  1562  0013' 0785'              	addwf	___lwmod@counter,f
  1563  0014'                    l1045:	
  1564  0014' 1F81'              	btfss	___lwmod@divisor+1,7
  1565  0015' 2800'              	goto	u581
  1566  0016' 2800'              	goto	u580
  1567  0017'                    u581:	
  1568  0017' 2800'              	goto	l1041
  1569  0018'                    u580:	
  1570  0018'                    l1047:	
  1571  0018' 0801'              	movf	___lwmod@divisor+1,w
  1572  0019' 0203'              	subwf	___lwmod@dividend+1,w
  1573  001A' 1D03               	skipz
  1574  001B' 2800'              	goto	u595
  1575  001C' 0800'              	movf	___lwmod@divisor,w
  1576  001D' 0202'              	subwf	___lwmod@dividend,w
  1577  001E'                    u595:	
  1578  001E' 1C03               	skipc
  1579  001F' 2800'              	goto	u591
  1580  0020' 2800'              	goto	u590
  1581  0021'                    u591:	
  1582  0021' 2800'              	goto	l1051
  1583  0022'                    u590:	
  1584  0022'                    l1049:	
  1585  0022' 0800'              	movf	___lwmod@divisor,w
  1586  0023' 0282'              	subwf	___lwmod@dividend,f
  1587  0024' 0801'              	movf	___lwmod@divisor+1,w
  1588  0025' 1C03               	skipc
  1589  0026' 0383'              	decf	___lwmod@dividend+1,f
  1590  0027' 0283'              	subwf	___lwmod@dividend+1,f
  1591  0028'                    l1051:	
  1592  0028' 3001               	movlw	1
  1593  0029'                    u605:	
  1594  0029' 1003               	clrc
  1595  002A' 0C81'              	rrf	___lwmod@divisor+1,f
  1596  002B' 0C80'              	rrf	___lwmod@divisor,f
  1597  002C' 3EFF               	addlw	-1
  1598  002D' 1D03               	skipz
  1599  002E' 2800'              	goto	u605
  1600  002F'                    l1053:	
  1601  002F' 3001               	movlw	1
  1602  0030' 0285'              	subwf	___lwmod@counter,f
  1603  0031' 1D03               	btfss	3,2
  1604  0032' 2800'              	goto	u611
  1605  0033' 2800'              	goto	u610
  1606  0034'                    u611:	
  1607  0034' 2800'              	goto	l1047
  1608  0035'                    u610:	
  1609  0035'                    l1055:	
  1610  0035' 0803'              	movf	___lwmod@dividend+1,w
  1611  0036' 0081'              	movwf	?___lwmod+1
  1612  0037' 0802'              	movf	___lwmod@dividend,w
  1613  0038' 0080'              	movwf	?___lwmod
  1614  0039'                    l486:	
  1615  0039' 0008               	return
  1616  003A'                    __end_of___lwmod:	
  1617                           
  1618                           	psect	text6
  1619  0000'                    __ptext6:	
  1620 ;; *************** function ___lwdiv *****************
  1621 ;; Defined at:
  1622 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  divisor         2    0[COMMON] unsigned int 
  1625 ;;  dividend        2    2[COMMON] unsigned int 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  quotient        2    5[COMMON] unsigned int 
  1628 ;;  counter         1    7[COMMON] unsigned char 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2    0[COMMON] unsigned int 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         4       0       0       0       0
  1639 ;;      Locals:         3       0       0       0       0
  1640 ;;      Temps:          1       0       0       0       0
  1641 ;;      Totals:         8       0       0       0       0
  1642 ;;Total ram usage:        8 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; This function calls:
  1645 ;;		Nothing
  1646 ;; This function is called by:
  1647 ;;		_utoa
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           
  1652                           ;psect for function ___lwdiv
  1653  0000'                    ___lwdiv:	
  1654  0000'                    l1011:	
  1655                           ;incstack = 0
  1656                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1657                           
  1658  0000' 0185'              	clrf	___lwdiv@quotient
  1659  0001' 0186'              	clrf	___lwdiv@quotient+1
  1660  0002'                    l1013:	
  1661  0002' 0800'              	movf	___lwdiv@divisor,w
  1662  0003' 0401'              	iorwf	___lwdiv@divisor+1,w
  1663  0004' 1903               	btfsc	3,2
  1664  0005' 2800'              	goto	u491
  1665  0006' 2800'              	goto	u490
  1666  0007'                    u491:	
  1667  0007' 2800'              	goto	l1033
  1668  0008'                    u490:	
  1669  0008'                    l1015:	
  1670  0008' 0187'              	clrf	___lwdiv@counter
  1671  0009' 0A87'              	incf	___lwdiv@counter,f
  1672  000A' 2800'              	goto	l1021
  1673  000B'                    l1017:	
  1674  000B' 3001               	movlw	1
  1675  000C'                    u505:	
  1676  000C' 1003               	clrc
  1677  000D' 0D80'              	rlf	___lwdiv@divisor,f
  1678  000E' 0D81'              	rlf	___lwdiv@divisor+1,f
  1679  000F' 3EFF               	addlw	-1
  1680  0010' 1D03               	skipz
  1681  0011' 2800'              	goto	u505
  1682  0012'                    l1019:	
  1683  0012' 3001               	movlw	1
  1684  0013' 0084'              	movwf	??___lwdiv
  1685  0014' 0804'              	movf	??___lwdiv,w
  1686  0015' 0787'              	addwf	___lwdiv@counter,f
  1687  0016'                    l1021:	
  1688  0016' 1F81'              	btfss	___lwdiv@divisor+1,7
  1689  0017' 2800'              	goto	u511
  1690  0018' 2800'              	goto	u510
  1691  0019'                    u511:	
  1692  0019' 2800'              	goto	l1017
  1693  001A'                    u510:	
  1694  001A'                    l1023:	
  1695  001A' 3001               	movlw	1
  1696  001B'                    u525:	
  1697  001B' 1003               	clrc
  1698  001C' 0D85'              	rlf	___lwdiv@quotient,f
  1699  001D' 0D86'              	rlf	___lwdiv@quotient+1,f
  1700  001E' 3EFF               	addlw	-1
  1701  001F' 1D03               	skipz
  1702  0020' 2800'              	goto	u525
  1703  0021' 0801'              	movf	___lwdiv@divisor+1,w
  1704  0022' 0203'              	subwf	___lwdiv@dividend+1,w
  1705  0023' 1D03               	skipz
  1706  0024' 2800'              	goto	u535
  1707  0025' 0800'              	movf	___lwdiv@divisor,w
  1708  0026' 0202'              	subwf	___lwdiv@dividend,w
  1709  0027'                    u535:	
  1710  0027' 1C03               	skipc
  1711  0028' 2800'              	goto	u531
  1712  0029' 2800'              	goto	u530
  1713  002A'                    u531:	
  1714  002A' 2800'              	goto	l1029
  1715  002B'                    u530:	
  1716  002B'                    l1025:	
  1717  002B' 0800'              	movf	___lwdiv@divisor,w
  1718  002C' 0282'              	subwf	___lwdiv@dividend,f
  1719  002D' 0801'              	movf	___lwdiv@divisor+1,w
  1720  002E' 1C03               	skipc
  1721  002F' 0383'              	decf	___lwdiv@dividend+1,f
  1722  0030' 0283'              	subwf	___lwdiv@dividend+1,f
  1723  0031'                    l1027:	
  1724  0031' 1405'              	bsf	___lwdiv@quotient,0
  1725  0032'                    l1029:	
  1726  0032' 3001               	movlw	1
  1727  0033'                    u545:	
  1728  0033' 1003               	clrc
  1729  0034' 0C81'              	rrf	___lwdiv@divisor+1,f
  1730  0035' 0C80'              	rrf	___lwdiv@divisor,f
  1731  0036' 3EFF               	addlw	-1
  1732  0037' 1D03               	skipz
  1733  0038' 2800'              	goto	u545
  1734  0039'                    l1031:	
  1735  0039' 3001               	movlw	1
  1736  003A' 0287'              	subwf	___lwdiv@counter,f
  1737  003B' 1D03               	btfss	3,2
  1738  003C' 2800'              	goto	u551
  1739  003D' 2800'              	goto	u550
  1740  003E'                    u551:	
  1741  003E' 2800'              	goto	l1023
  1742  003F'                    u550:	
  1743  003F'                    l1033:	
  1744  003F' 0806'              	movf	___lwdiv@quotient+1,w
  1745  0040' 0081'              	movwf	?___lwdiv+1
  1746  0041' 0805'              	movf	___lwdiv@quotient,w
  1747  0042' 0080'              	movwf	?___lwdiv
  1748  0043'                    l476:	
  1749  0043' 0008               	return
  1750  0044'                    __end_of___lwdiv:	
  1751                           
  1752                           	psect	text7
  1753  0000'                    __ptext7:	
  1754 ;; *************** function ___awmod *****************
  1755 ;; Defined at:
  1756 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  divisor         2    0[COMMON] int 
  1759 ;;  dividend        2    2[COMMON] int 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  sign            1    6[COMMON] unsigned char 
  1762 ;;  counter         1    5[COMMON] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  2    0[COMMON] int 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1772 ;;      Params:         4       0       0       0       0
  1773 ;;      Locals:         2       0       0       0       0
  1774 ;;      Temps:          1       0       0       0       0
  1775 ;;      Totals:         7       0       0       0       0
  1776 ;;Total ram usage:        7 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_LOOP
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           
  1786                           ;psect for function ___awmod
  1787  0000'                    ___awmod:	
  1788  0000'                    l1201:	
  1789                           ;incstack = 0
  1790                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1791                           
  1792  0000' 0186'              	clrf	___awmod@sign
  1793  0001'                    l1203:	
  1794  0001' 1F83'              	btfss	___awmod@dividend+1,7
  1795  0002' 2800'              	goto	u861
  1796  0003' 2800'              	goto	u860
  1797  0004'                    u861:	
  1798  0004' 2800'              	goto	l1209
  1799  0005'                    u860:	
  1800  0005'                    l1205:	
  1801  0005' 0982'              	comf	___awmod@dividend,f
  1802  0006' 0983'              	comf	___awmod@dividend+1,f
  1803  0007' 0A82'              	incf	___awmod@dividend,f
  1804  0008' 1903               	skipnz
  1805  0009' 0A83'              	incf	___awmod@dividend+1,f
  1806  000A'                    l1207:	
  1807  000A' 0186'              	clrf	___awmod@sign
  1808  000B' 0A86'              	incf	___awmod@sign,f
  1809  000C'                    l1209:	
  1810  000C' 1F81'              	btfss	___awmod@divisor+1,7
  1811  000D' 2800'              	goto	u871
  1812  000E' 2800'              	goto	u870
  1813  000F'                    u871:	
  1814  000F' 2800'              	goto	l1213
  1815  0010'                    u870:	
  1816  0010'                    l1211:	
  1817  0010' 0980'              	comf	___awmod@divisor,f
  1818  0011' 0981'              	comf	___awmod@divisor+1,f
  1819  0012' 0A80'              	incf	___awmod@divisor,f
  1820  0013' 1903               	skipnz
  1821  0014' 0A81'              	incf	___awmod@divisor+1,f
  1822  0015'                    l1213:	
  1823  0015' 0800'              	movf	___awmod@divisor,w
  1824  0016' 0401'              	iorwf	___awmod@divisor+1,w
  1825  0017' 1903               	btfsc	3,2
  1826  0018' 2800'              	goto	u881
  1827  0019' 2800'              	goto	u880
  1828  001A'                    u881:	
  1829  001A' 2800'              	goto	l1231
  1830  001B'                    u880:	
  1831  001B'                    l1215:	
  1832  001B' 0185'              	clrf	___awmod@counter
  1833  001C' 0A85'              	incf	___awmod@counter,f
  1834  001D' 2800'              	goto	l1221
  1835  001E'                    l1217:	
  1836  001E' 3001               	movlw	1
  1837  001F'                    u895:	
  1838  001F' 1003               	clrc
  1839  0020' 0D80'              	rlf	___awmod@divisor,f
  1840  0021' 0D81'              	rlf	___awmod@divisor+1,f
  1841  0022' 3EFF               	addlw	-1
  1842  0023' 1D03               	skipz
  1843  0024' 2800'              	goto	u895
  1844  0025'                    l1219:	
  1845  0025' 3001               	movlw	1
  1846  0026' 0084'              	movwf	??___awmod
  1847  0027' 0804'              	movf	??___awmod,w
  1848  0028' 0785'              	addwf	___awmod@counter,f
  1849  0029'                    l1221:	
  1850  0029' 1F81'              	btfss	___awmod@divisor+1,7
  1851  002A' 2800'              	goto	u901
  1852  002B' 2800'              	goto	u900
  1853  002C'                    u901:	
  1854  002C' 2800'              	goto	l1217
  1855  002D'                    u900:	
  1856  002D'                    l1223:	
  1857  002D' 0801'              	movf	___awmod@divisor+1,w
  1858  002E' 0203'              	subwf	___awmod@dividend+1,w
  1859  002F' 1D03               	skipz
  1860  0030' 2800'              	goto	u915
  1861  0031' 0800'              	movf	___awmod@divisor,w
  1862  0032' 0202'              	subwf	___awmod@dividend,w
  1863  0033'                    u915:	
  1864  0033' 1C03               	skipc
  1865  0034' 2800'              	goto	u911
  1866  0035' 2800'              	goto	u910
  1867  0036'                    u911:	
  1868  0036' 2800'              	goto	l1227
  1869  0037'                    u910:	
  1870  0037'                    l1225:	
  1871  0037' 0800'              	movf	___awmod@divisor,w
  1872  0038' 0282'              	subwf	___awmod@dividend,f
  1873  0039' 0801'              	movf	___awmod@divisor+1,w
  1874  003A' 1C03               	skipc
  1875  003B' 0383'              	decf	___awmod@dividend+1,f
  1876  003C' 0283'              	subwf	___awmod@dividend+1,f
  1877  003D'                    l1227:	
  1878  003D' 3001               	movlw	1
  1879  003E'                    u925:	
  1880  003E' 1003               	clrc
  1881  003F' 0C81'              	rrf	___awmod@divisor+1,f
  1882  0040' 0C80'              	rrf	___awmod@divisor,f
  1883  0041' 3EFF               	addlw	-1
  1884  0042' 1D03               	skipz
  1885  0043' 2800'              	goto	u925
  1886  0044'                    l1229:	
  1887  0044' 3001               	movlw	1
  1888  0045' 0285'              	subwf	___awmod@counter,f
  1889  0046' 1D03               	btfss	3,2
  1890  0047' 2800'              	goto	u931
  1891  0048' 2800'              	goto	u930
  1892  0049'                    u931:	
  1893  0049' 2800'              	goto	l1223
  1894  004A'                    u930:	
  1895  004A'                    l1231:	
  1896  004A' 0806'              	movf	___awmod@sign,w
  1897  004B' 1903               	btfsc	3,2
  1898  004C' 2800'              	goto	u941
  1899  004D' 2800'              	goto	u940
  1900  004E'                    u941:	
  1901  004E' 2800'              	goto	l1235
  1902  004F'                    u940:	
  1903  004F'                    l1233:	
  1904  004F' 0982'              	comf	___awmod@dividend,f
  1905  0050' 0983'              	comf	___awmod@dividend+1,f
  1906  0051' 0A82'              	incf	___awmod@dividend,f
  1907  0052' 1903               	skipnz
  1908  0053' 0A83'              	incf	___awmod@dividend+1,f
  1909  0054'                    l1235:	
  1910  0054' 0803'              	movf	___awmod@dividend+1,w
  1911  0055' 0081'              	movwf	?___awmod+1
  1912  0056' 0802'              	movf	___awmod@dividend,w
  1913  0057' 0080'              	movwf	?___awmod
  1914  0058'                    l370:	
  1915  0058' 0008               	return
  1916  0059'                    __end_of___awmod:	
  1917                           
  1918                           	psect	text8
  1919  0000'                    __ptext8:	
  1920 ;; *************** function ___awdiv *****************
  1921 ;; Defined at:
  1922 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  divisor         2    0[COMMON] int 
  1925 ;;  dividend        2    2[COMMON] int 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  quotient        2    7[COMMON] int 
  1928 ;;  sign            1    6[COMMON] unsigned char 
  1929 ;;  counter         1    5[COMMON] unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  2    0[COMMON] int 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         4       0       0       0       0
  1940 ;;      Locals:         4       0       0       0       0
  1941 ;;      Temps:          1       0       0       0       0
  1942 ;;      Totals:         9       0       0       0       0
  1943 ;;Total ram usage:        9 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_LOOP
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           
  1953                           ;psect for function ___awdiv
  1954  0000'                    ___awdiv:	
  1955  0000'                    l1157:	
  1956                           ;incstack = 0
  1957                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1958                           
  1959  0000' 0186'              	clrf	___awdiv@sign
  1960  0001'                    l1159:	
  1961  0001' 1F81'              	btfss	___awdiv@divisor+1,7
  1962  0002' 2800'              	goto	u761
  1963  0003' 2800'              	goto	u760
  1964  0004'                    u761:	
  1965  0004' 2800'              	goto	l1165
  1966  0005'                    u760:	
  1967  0005'                    l1161:	
  1968  0005' 0980'              	comf	___awdiv@divisor,f
  1969  0006' 0981'              	comf	___awdiv@divisor+1,f
  1970  0007' 0A80'              	incf	___awdiv@divisor,f
  1971  0008' 1903               	skipnz
  1972  0009' 0A81'              	incf	___awdiv@divisor+1,f
  1973  000A'                    l1163:	
  1974  000A' 0186'              	clrf	___awdiv@sign
  1975  000B' 0A86'              	incf	___awdiv@sign,f
  1976  000C'                    l1165:	
  1977  000C' 1F83'              	btfss	___awdiv@dividend+1,7
  1978  000D' 2800'              	goto	u771
  1979  000E' 2800'              	goto	u770
  1980  000F'                    u771:	
  1981  000F' 2800'              	goto	l1171
  1982  0010'                    u770:	
  1983  0010'                    l1167:	
  1984  0010' 0982'              	comf	___awdiv@dividend,f
  1985  0011' 0983'              	comf	___awdiv@dividend+1,f
  1986  0012' 0A82'              	incf	___awdiv@dividend,f
  1987  0013' 1903               	skipnz
  1988  0014' 0A83'              	incf	___awdiv@dividend+1,f
  1989  0015'                    l1169:	
  1990  0015' 3001               	movlw	1
  1991  0016' 0084'              	movwf	??___awdiv
  1992  0017' 0804'              	movf	??___awdiv,w
  1993  0018' 0686'              	xorwf	___awdiv@sign,f
  1994  0019'                    l1171:	
  1995  0019' 0187'              	clrf	___awdiv@quotient
  1996  001A' 0188'              	clrf	___awdiv@quotient+1
  1997  001B'                    l1173:	
  1998  001B' 0800'              	movf	___awdiv@divisor,w
  1999  001C' 0401'              	iorwf	___awdiv@divisor+1,w
  2000  001D' 1903               	btfsc	3,2
  2001  001E' 2800'              	goto	u781
  2002  001F' 2800'              	goto	u780
  2003  0020'                    u781:	
  2004  0020' 2800'              	goto	l1193
  2005  0021'                    u780:	
  2006  0021'                    l1175:	
  2007  0021' 0185'              	clrf	___awdiv@counter
  2008  0022' 0A85'              	incf	___awdiv@counter,f
  2009  0023' 2800'              	goto	l1181
  2010  0024'                    l1177:	
  2011  0024' 3001               	movlw	1
  2012  0025'                    u795:	
  2013  0025' 1003               	clrc
  2014  0026' 0D80'              	rlf	___awdiv@divisor,f
  2015  0027' 0D81'              	rlf	___awdiv@divisor+1,f
  2016  0028' 3EFF               	addlw	-1
  2017  0029' 1D03               	skipz
  2018  002A' 2800'              	goto	u795
  2019  002B'                    l1179:	
  2020  002B' 3001               	movlw	1
  2021  002C' 0084'              	movwf	??___awdiv
  2022  002D' 0804'              	movf	??___awdiv,w
  2023  002E' 0785'              	addwf	___awdiv@counter,f
  2024  002F'                    l1181:	
  2025  002F' 1F81'              	btfss	___awdiv@divisor+1,7
  2026  0030' 2800'              	goto	u801
  2027  0031' 2800'              	goto	u800
  2028  0032'                    u801:	
  2029  0032' 2800'              	goto	l1177
  2030  0033'                    u800:	
  2031  0033'                    l1183:	
  2032  0033' 3001               	movlw	1
  2033  0034'                    u815:	
  2034  0034' 1003               	clrc
  2035  0035' 0D87'              	rlf	___awdiv@quotient,f
  2036  0036' 0D88'              	rlf	___awdiv@quotient+1,f
  2037  0037' 3EFF               	addlw	-1
  2038  0038' 1D03               	skipz
  2039  0039' 2800'              	goto	u815
  2040  003A' 0801'              	movf	___awdiv@divisor+1,w
  2041  003B' 0203'              	subwf	___awdiv@dividend+1,w
  2042  003C' 1D03               	skipz
  2043  003D' 2800'              	goto	u825
  2044  003E' 0800'              	movf	___awdiv@divisor,w
  2045  003F' 0202'              	subwf	___awdiv@dividend,w
  2046  0040'                    u825:	
  2047  0040' 1C03               	skipc
  2048  0041' 2800'              	goto	u821
  2049  0042' 2800'              	goto	u820
  2050  0043'                    u821:	
  2051  0043' 2800'              	goto	l1189
  2052  0044'                    u820:	
  2053  0044'                    l1185:	
  2054  0044' 0800'              	movf	___awdiv@divisor,w
  2055  0045' 0282'              	subwf	___awdiv@dividend,f
  2056  0046' 0801'              	movf	___awdiv@divisor+1,w
  2057  0047' 1C03               	skipc
  2058  0048' 0383'              	decf	___awdiv@dividend+1,f
  2059  0049' 0283'              	subwf	___awdiv@dividend+1,f
  2060  004A'                    l1187:	
  2061  004A' 1407'              	bsf	___awdiv@quotient,0
  2062  004B'                    l1189:	
  2063  004B' 3001               	movlw	1
  2064  004C'                    u835:	
  2065  004C' 1003               	clrc
  2066  004D' 0C81'              	rrf	___awdiv@divisor+1,f
  2067  004E' 0C80'              	rrf	___awdiv@divisor,f
  2068  004F' 3EFF               	addlw	-1
  2069  0050' 1D03               	skipz
  2070  0051' 2800'              	goto	u835
  2071  0052'                    l1191:	
  2072  0052' 3001               	movlw	1
  2073  0053' 0285'              	subwf	___awdiv@counter,f
  2074  0054' 1D03               	btfss	3,2
  2075  0055' 2800'              	goto	u841
  2076  0056' 2800'              	goto	u840
  2077  0057'                    u841:	
  2078  0057' 2800'              	goto	l1183
  2079  0058'                    u840:	
  2080  0058'                    l1193:	
  2081  0058' 0806'              	movf	___awdiv@sign,w
  2082  0059' 1903               	btfsc	3,2
  2083  005A' 2800'              	goto	u851
  2084  005B' 2800'              	goto	u850
  2085  005C'                    u851:	
  2086  005C' 2800'              	goto	l1197
  2087  005D'                    u850:	
  2088  005D'                    l1195:	
  2089  005D' 0987'              	comf	___awdiv@quotient,f
  2090  005E' 0988'              	comf	___awdiv@quotient+1,f
  2091  005F' 0A87'              	incf	___awdiv@quotient,f
  2092  0060' 1903               	skipnz
  2093  0061' 0A88'              	incf	___awdiv@quotient+1,f
  2094  0062'                    l1197:	
  2095  0062' 0808'              	movf	___awdiv@quotient+1,w
  2096  0063' 0081'              	movwf	?___awdiv+1
  2097  0064' 0807'              	movf	___awdiv@quotient,w
  2098  0065' 0080'              	movwf	?___awdiv
  2099  0066'                    l357:	
  2100  0066' 0008               	return
  2101  0067'                    __end_of___awdiv:	
  2102                           
  2103                           	psect	text9
  2104  0000'                    __ptext9:	
  2105 ;; *************** function _START_DHT11 *****************
  2106 ;; Defined at:
  2107 ;;		line 156 in file "TEMP_PIC.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       0       0       0       0
  2122 ;;      Locals:         0       0       0       0       0
  2123 ;;      Temps:          2       0       0       0       0
  2124 ;;      Totals:         2       0       0       0       0
  2125 ;;Total ram usage:        2 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_LOOP
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function _START_DHT11
  2136  0000'                    _START_DHT11:	
  2137  0000'                    l1089:	
  2138                           ;incstack = 0
  2139                           ; Regs used in _START_DHT11: [wreg]
  2140                           
  2141                           
  2142                           ;TEMP_PIC.c: 157:      TRISDbits.TRISD2 = 0;
  2143  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2144  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2145  0002' 1108               	bcf	8,2	;volatile
  2146                           
  2147                           ;TEMP_PIC.c: 158:      PORTDbits.RD2 = 0;
  2148  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  2149  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  2150  0005' 1108               	bcf	8,2	;volatile
  2151  0006'                    l1091:	
  2152                           
  2153                           ;TEMP_PIC.c: 159:      _delay((unsigned long)((18)*(8000000/4000.0)));
  2154  0006' 302F               	movlw	47
  2155  0007' 0081'              	movwf	??_START_DHT11+1
  2156  0008' 30BF               	movlw	191
  2157  0009' 0080'              	movwf	??_START_DHT11
  2158  000A'                    u987:	
  2159  000A' 0B80'              	decfsz	??_START_DHT11,f
  2160  000B' 2800'              	goto	u987
  2161  000C' 0B81'              	decfsz	??_START_DHT11+1,f
  2162  000D' 2800'              	goto	u987
  2163  000E' 2800'              	nop2
  2164  000F'                    l1093:	
  2165                           
  2166                           ;TEMP_PIC.c: 160:      PORTDbits.RD2 = 1;
  2167  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  2168  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  2169  0011' 1508               	bsf	8,2	;volatile
  2170                           
  2171                           ;TEMP_PIC.c: 161:      _delay((unsigned long)((30)*(8000000/4000000.0)));
  2172  0012' 3013               	movlw	19
  2173  0013' 0080'              	movwf	??_START_DHT11
  2174  0014'                    u997:	
  2175  0014' 0B80'              	decfsz	??_START_DHT11,f
  2176  0015' 2800'              	goto	u997
  2177  0016' 2800'              	nop2
  2178  0017'                    l1095:	
  2179                           
  2180                           ;TEMP_PIC.c: 162:      TRISDbits.TRISD2=1;
  2181  0017' 1683               	bsf	3,5	;RP0=1, select bank1
  2182  0018' 1303               	bcf	3,6	;RP1=0, select bank1
  2183  0019' 1508               	bsf	8,2	;volatile
  2184  001A'                    l100:	
  2185  001A' 0008               	return
  2186  001B'                    __end_of_START_DHT11:	
  2187                           
  2188                           	psect	text10
  2189  0000'                    __ptext10:	
  2190 ;; *************** function _ReadData *****************
  2191 ;; Defined at:
  2192 ;;		line 178 in file "TEMP_PIC.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  j               1    3[COMMON] unsigned char 
  2197 ;;  i               1    2[COMMON] unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      unsigned char 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2207 ;;      Params:         0       0       0       0       0
  2208 ;;      Locals:         2       0       0       0       0
  2209 ;;      Temps:          2       0       0       0       0
  2210 ;;      Totals:         4       0       0       0       0
  2211 ;;Total ram usage:        4 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_LOOP
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _ReadData
  2222  0000'                    _ReadData:	
  2223  0000'                    l1111:	
  2224                           ;incstack = 0
  2225                           ; Regs used in _ReadData: [wreg+status,2+status,0]
  2226                           
  2227                           
  2228                           ;TEMP_PIC.c: 179:      char i, j;;TEMP_PIC.c: 180:      for(j = 0; j<8; j++){
  2229  0000' 0183'              	clrf	ReadData@j
  2230  0001'                    l110:	
  2231  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  2232  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  2233  0003' 1D08               	btfss	8,2	;volatile
  2234  0004' 2800'              	goto	u671
  2235  0005' 2800'              	goto	u670
  2236  0006'                    u671:	
  2237  0006' 2800'              	goto	l110
  2238  0007'                    u670:	
  2239  0007'                    l1117:	
  2240                           
  2241                           ;TEMP_PIC.c: 182:          _delay((unsigned long)((30)*(8000000/4000000.0)));
  2242  0007' 3013               	movlw	19
  2243  0008' 0080'              	movwf	??_ReadData
  2244  0009'                    u1007:	
  2245  0009' 0B80'              	decfsz	??_ReadData,f
  2246  000A' 2800'              	goto	u1007
  2247  000B' 2800'              	nop2
  2248  000C'                    l1119:	
  2249                           
  2250                           ;TEMP_PIC.c: 183:          if(PORTDbits.RD2 == 0)
  2251  000C' 1283               	bcf	3,5	;RP0=0, select bank0
  2252  000D' 1303               	bcf	3,6	;RP1=0, select bank0
  2253  000E' 1908               	btfsc	8,2	;volatile
  2254  000F' 2800'              	goto	u681
  2255  0010' 2800'              	goto	u680
  2256  0011'                    u681:	
  2257  0011' 2800'              	goto	l1123
  2258  0012'                    u680:	
  2259  0012'                    l1121:	
  2260                           
  2261                           ;TEMP_PIC.c: 184:              i&= ~(1<<(7-j));
  2262  0012' 3001               	movlw	1
  2263  0013' 0080'              	movwf	??_ReadData
  2264  0014' 0803'              	movf	ReadData@j,w
  2265  0015' 3C07               	sublw	7
  2266  0016' 3E01               	addlw	1
  2267  0017' 2800'              	goto	u694
  2268  0018'                    u695:	
  2269  0018' 1003               	clrc
  2270  0019' 0D80'              	rlf	??_ReadData,f
  2271  001A'                    u694:	
  2272  001A' 3EFF               	addlw	-1
  2273  001B' 1D03               	skipz
  2274  001C' 2800'              	goto	u695
  2275  001D' 0800'              	movf	??_ReadData,w
  2276  001E' 3AFF               	xorlw	255
  2277  001F' 0081'              	movwf	??_ReadData+1
  2278  0020' 0801'              	movf	??_ReadData+1,w
  2279  0021' 0582'              	andwf	ReadData@i,f
  2280  0022' 2800'              	goto	l1125
  2281  0023'                    l1123:	
  2282                           
  2283                           ;TEMP_PIC.c: 186:              i|= (1<< (7-j));
  2284  0023' 3001               	movlw	1
  2285  0024' 0080'              	movwf	??_ReadData
  2286  0025' 0803'              	movf	ReadData@j,w
  2287  0026' 3C07               	sublw	7
  2288  0027' 3E01               	addlw	1
  2289  0028' 2800'              	goto	u704
  2290  0029'                    u705:	
  2291  0029' 1003               	clrc
  2292  002A' 0D80'              	rlf	??_ReadData,f
  2293  002B'                    u704:	
  2294  002B' 3EFF               	addlw	-1
  2295  002C' 1D03               	skipz
  2296  002D' 2800'              	goto	u705
  2297  002E' 0800'              	movf	??_ReadData,w
  2298  002F' 0081'              	movwf	??_ReadData+1
  2299  0030' 0801'              	movf	??_ReadData+1,w
  2300  0031' 0482'              	iorwf	ReadData@i,f
  2301  0032'                    l115:	
  2302                           ;TEMP_PIC.c: 187:          while(PORTDbits.RD2);
  2303                           
  2304  0032' 1908               	btfsc	8,2	;volatile
  2305  0033' 2800'              	goto	u711
  2306  0034' 2800'              	goto	u710
  2307  0035'                    u711:	
  2308  0035' 2800'              	goto	l115
  2309  0036'                    u710:	
  2310  0036'                    l1125:	
  2311                           
  2312                           ;TEMP_PIC.c: 189:      }
  2313  0036' 3001               	movlw	1
  2314  0037' 0080'              	movwf	??_ReadData
  2315  0038' 0800'              	movf	??_ReadData,w
  2316  0039' 0783'              	addwf	ReadData@j,f
  2317  003A'                    l1127:	
  2318  003A' 3008               	movlw	8
  2319  003B' 0203'              	subwf	ReadData@j,w
  2320  003C' 1C03               	skipc
  2321  003D' 2800'              	goto	u721
  2322  003E' 2800'              	goto	u720
  2323  003F'                    u721:	
  2324  003F' 2800'              	goto	l110
  2325  0040'                    u720:	
  2326  0040'                    l1129:	
  2327                           
  2328                           ;TEMP_PIC.c: 190:      return i;
  2329  0040' 0802'              	movf	ReadData@i,w
  2330  0041'                    l118:	
  2331  0041' 0008               	return
  2332  0042'                    __end_of_ReadData:	
  2333                           
  2334                           	psect	text11
  2335  0000'                    __ptext11:	
  2336 ;; *************** function _CHECK_RESPONSE *****************
  2337 ;; Defined at:
  2338 ;;		line 167 in file "TEMP_PIC.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2352 ;;      Params:         0       0       0       0       0
  2353 ;;      Locals:         0       0       0       0       0
  2354 ;;      Temps:          1       0       0       0       0
  2355 ;;      Totals:         1       0       0       0       0
  2356 ;;Total ram usage:        1 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_LOOP
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _CHECK_RESPONSE
  2367  0000'                    _CHECK_RESPONSE:	
  2368  0000'                    l1097:	
  2369                           ;incstack = 0
  2370                           ; Regs used in _CHECK_RESPONSE: [wreg+status,2]
  2371                           
  2372                           
  2373                           ;TEMP_PIC.c: 168:    check = 0;
  2374  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2375  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2376  0002' 0196'              	clrf	_check
  2377  0003'                    l1099:	
  2378                           
  2379                           ;TEMP_PIC.c: 169:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2380  0003' 301A               	movlw	26
  2381  0004' 0080'              	movwf	??_CHECK_RESPONSE
  2382  0005'                    u1017:	
  2383  0005' 0B80'              	decfsz	??_CHECK_RESPONSE,f
  2384  0006' 2800'              	goto	u1017
  2385  0007' 0000               	nop
  2386  0008'                    l1101:	
  2387                           
  2388                           ;TEMP_PIC.c: 170:    if(PORTDbits.RD2 == 0){
  2389  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  2390  0009' 1303               	bcf	3,6	;RP1=0, select bank0
  2391  000A' 1908               	btfsc	8,2	;volatile
  2392  000B' 2800'              	goto	u651
  2393  000C' 2800'              	goto	u650
  2394  000D'                    u651:	
  2395  000D' 2800'              	goto	l105
  2396  000E'                    u650:	
  2397  000E'                    l1103:	
  2398                           
  2399                           ;TEMP_PIC.c: 171:        _delay((unsigned long)((80)*(8000000/4000000.0)));
  2400  000E' 3035               	movlw	53
  2401  000F' 0080'              	movwf	??_CHECK_RESPONSE
  2402  0010'                    u1027:	
  2403  0010' 0B80'              	decfsz	??_CHECK_RESPONSE,f
  2404  0011' 2800'              	goto	u1027
  2405  0012'                    l1105:	
  2406                           
  2407                           ;TEMP_PIC.c: 172:        if(PORTDbits.RD2 == 1){
  2408  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  2409  0013' 1303               	bcf	3,6	;RP1=0, select bank0
  2410  0014' 1D08               	btfss	8,2	;volatile
  2411  0015' 2800'              	goto	u661
  2412  0016' 2800'              	goto	u660
  2413  0017'                    u661:	
  2414  0017' 2800'              	goto	l105
  2415  0018'                    u660:	
  2416  0018'                    l1107:	
  2417                           
  2418                           ;TEMP_PIC.c: 173:            check = 1;
  2419  0018' 0196'              	clrf	_check
  2420  0019' 0A96'              	incf	_check,f
  2421  001A'                    l1109:	
  2422                           
  2423                           ;TEMP_PIC.c: 174:            _delay((unsigned long)((40)*(8000000/4000000.0)));
  2424  001A' 301A               	movlw	26
  2425  001B' 0080'              	movwf	??_CHECK_RESPONSE
  2426  001C'                    u1037:	
  2427  001C' 0B80'              	decfsz	??_CHECK_RESPONSE,f
  2428  001D' 2800'              	goto	u1037
  2429  001E' 0000               	nop
  2430  001F'                    l105:	
  2431  001F' 0008               	return
  2432  0020'                    __end_of_CHECK_RESPONSE:	
  2433  007E                     btemp	set	126	;btemp
  2434  007E                     wtemp0	set	126


Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_msg$0	PTR unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[8]), 
		 -> decT_char(BANK0[5]), decHR_char(BANK0[5]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 5
		 -> uniT_char(BANK0[5]), uniHR_char(BANK0[5]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 5
		 -> decT_char(BANK0[5]), decHR_char(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 5
		 -> decT_char(BANK0[5]), decHR_char(BANK0[5]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> uniT_char(BANK0[5]), decT_char(BANK0[5]), uniHR_char(BANK0[5]), decHR_char(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> uniT_char(BANK0[5]), decT_char(BANK0[5]), uniHR_char(BANK0[5]), decHR_char(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> uniT_char(BANK0[5]), decT_char(BANK0[5]), uniHR_char(BANK0[5]), decHR_char(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> uniT_char(BANK0[5]), decT_char(BANK0[5]), uniHR_char(BANK0[5]), decHR_char(BANK0[5]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 5
		 -> decT_char(BANK0[5]), decHR_char(BANK0[5]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> uniT_char(BANK0[5]), decT_char(BANK0[5]), uniHR_char(BANK0[5]), decHR_char(BANK0[5]), 


Critical Paths under _main in COMMON

    _LOOP->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _main->_LOOP
    _LOOP->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3873
                               _LOOP
                     _inicializacion
 ---------------------------------------------------------------------------------
 (1) _inicializacion                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 8     8      0    3873
                                             10 BANK0      8     8      0
                     _CHECK_RESPONSE
                           _ReadData
                        _START_DHT11
                            ___awdiv
                            ___awmod
                               _itoa
                            _lcd_cmd
                            _lcd_msg
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     316
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _lcd_msg                                              2     0      2      72
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    2167
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _START_DHT11                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadData                                             4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _CHECK_RESPONSE                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOOP
     _CHECK_RESPONSE
     _ReadData
     _START_DHT11
     ___awdiv
     ___awmod
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _lcd_cmd
     _lcd_msg
     _strcat
   _inicializacion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      3D       5       76.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 27 11:56:01 2020

                      pc 0002              __CFG_CP$OFF 0000                       l92 0000  
                     l89 001D             ___awdiv@sign 0006                       fsr 0004  
                    l100 001A                      l110 0001                      l105 001F  
                    l115 0032                      l118 0041                      l370 0058  
                    l357 0066                      l476 0043                      l660 0071  
                    l652 0025                      l486 0039                      l658 005A  
                    l669 0028                      u510 001A                      u511 0019  
                    u505 000C                      u530 002B                      u610 0035  
           __CFG_CPD$OFF 0000                      u531 002A                      u611 0034  
                    u620 0024                      u525 001B                      u605 0029  
                    u621 0023                      u710 0036                      u550 003F  
                    u630 0056                      u711 0035                      u551 003E  
                    u535 0027                      u631 0055                      u720 0040  
                    u704 002B                      u800 0033                      u560 0006  
                    u640 006D                      u721 003F                      u705 0029  
                    u801 0032                      u545 0033                      u561 0005  
                    u641 006C                      u650 000E                      u490 0008  
                    u730 0007                      u651 000D                      u491 0007  
                    u731 0006                      u660 0018                      u820 0044  
                    u900 002D                      u580 0018                      u740 0012  
                    u661 0017                      u821 0043                      u901 002C  
                    u581 0017                      u741 0011                      u670 0007  
                    u910 0037                      u590 0022                      u750 0028  
                    u671 0006                      u815 0034                      u911 0036  
                    u591 0021                      u575 000A                      u751 0027  
                    u680 0012                      u840 0058                      u760 0005  
                    u681 0011                      u841 0057                      u825 0040  
                    u761 0004                      u850 005D                      u770 0010  
                    u930 004A                      u851 005C                      u835 004C  
                    u771 000F                      u931 0049                      u915 0033  
                    u595 001E                      u780 0021                      u940 004F  
                    u860 0005                      u781 0020                      u941 004E  
                    u925 003E                      u861 0004                      u694 001A  
                    u870 0010                      u950 0011                      u695 0018  
                    u871 000F                      u951 0010                      u880 001B  
                    u960 006B                      u881 001A                      u961 006A  
                    u795 0025                      u965 0067                      u895 001F  
                    u977 0140                      u987 000A                      u997 0014  
                    fsr0 0004                      _sum 0000                      indf 0000  
           ___awmod@sign 0006             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   l1011 0000                     l1101 0008                     l1021 0016  
                   l1013 0002                     l1103 000E                     l1111 0000  
                   l1031 0039                     l1023 001A                     l1015 0008  
                   l1105 0012                     l1121 0012                     l1201 0000  
                   l1025 002B                     l1017 000B                     l1033 003F  
                   l1041 0009                     l1107 0018                     l1123 0023  
                   l1211 0010                     l1203 0001                     l1027 0031  
                   l1019 0012                     l1051 0028                     l1043 0010  
                   l1109 001A                     l1125 0036                     l1117 0007  
                   l1221 0029                     l1213 0015                     l1205 0005  
                   l1029 0032                     l1053 002F                     l1045 0014  
                   l1037 0000                     l1061 0007                     l1141 0012  
                   l1133 0003                     l1127 003A                     l1119 000C  
                   l1223 002D                     l1215 001B                     l1231 004A  
                   l1207 000A                     l1047 0018                     l1039 0006  
                   l1055 0035                     l1071 002A                     l1063 001A  
                   l1143 0017                     l1135 0003                     l1151 000A  
                   l1129 0040                     l1161 0005                     l1233 004F  
                   l1225 0037                     l1217 001E                     l1209 000C  
                   l1049 0022                     l1081 0065                     l1073 003D  
                   l1065 001E                     l1137 0007                     l1153 0013  
                   l1241 000A                     l1091 0006                     l1171 0019  
                   l1163 000A                     l1235 0054                     l1227 003D  
                   l1219 0025                     l1083 0067                     l1075 004E  
                   l1067 0024                     l1059 0003                     l1139 000E  
                   l1155 001B                     l1147 0001                     l1251 008F  
                   l1243 0011                     l1093 000F                     l1181 002F  
                   l1173 001B                     l1165 000C                     l1157 0000  
                   l1229 0044                     l1085 006D                     l1077 0056  
                   l1069 0028                     l1149 0006                     l1261 010D  
                   l1253 00B5                     l1245 0046                     l1095 0017  
                   l1191 0052                     l1183 0033                     l1175 0021  
                   l1167 0010                     l1159 0001                     l1079 005E  
                   l1271 013A                     l1263 0119                     l1255 00CD  
                   l1247 006B                     l1239 0000                     l1097 0000  
                   l1089 0000                     l1185 0044                     l1177 0024  
                   l1193 0058                     l1169 0015                     l1273 0144  
                   l1265 011F                     l1257 00F3                     l1249 0081  
                   l1281 0000                     l1099 0003                     l1195 005D  
                   l1187 004A                     l1179 002B                     l1275 014A  
                   l1267 0128                     l1259 0101                     l1283 0013  
                   l1197 0062                     l1189 004B                     l1277 0153  
                   l1269 0131                     l1285 0018                     l1279 015C  
                   STR_1 0026                     STR_2 0006                     STR_3 0011  
                   STR_4 001C                     u1007 0009                     u1017 0005  
                   u1027 0010                     u1037 001C                     _LOOP 0000  
           __CFG_WRT$OFF 0000                     _decT 000E                     _main 0000  
                   _itoa 0000                     _uniT 0010                     btemp 007E  
                   _utoa 0000                     start 0000*           __CFG_IESO$OFF 0000  
                  ?_LOOP 0000                    ?_main 0000                    ?_itoa 0004  
        __end_of___awdiv 0067            __CFG_WDTE$OFF 0000          __end_of___awmod 0059  
                  _ANSEL 0188                    ?_utoa 0008          ___awdiv@divisor 0000  
        __end_of___lwdiv 0044          __end_of___lwmod 003A          ___awdiv@counter 0005  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089           __CFG_FCMEN$OFF 0000                    _decHR 000A  
                  _check 0016                    _uniHR 000C           __CFG_BOREN$OFF 0000  
                  pclath 000A                    utoa@c 0002                    utoa@v 0000  
                  status 0003                    wtemp0 007E             __end_of_LOOP 0167  
         __CFG_MCLRE$OFF 0000          __initialization 0000             __end_of_main 0020  
           __end_of_itoa 0026             __end_of_utoa 0072         __end_of_ReadData 0042  
                 ??_LOOP 000A                   ??_main 000E                   ??_itoa 000D  
                 ??_utoa 000C         ___awdiv@dividend 0002                   _ANSELH 0189  
         __CFG_PWRTE$OFF 0000                ??___awdiv 0004                ??___awmod 0004  
              ??___lwdiv 0004                ??___lwmod 0004         ___awdiv@quotient 0007  
        ___awmod@divisor 0000          ___awmod@counter 0005                ??_lcd_cmd 0000  
                 _strcat 0000                ??_lcd_msg 0000             ?_START_DHT11 0000  
__end_of__initialization 0009               _decHR_char 0017           __pcstackCOMMON 0000  
             __pbssBANK0 0000                ?_ReadData 0000  __size_of_CHECK_RESPONSE 0020  
             __pmaintext 0000                  ?_strcat 0000               __stringtab 0000  
             ??_ReadData 0000           _inicializacion 0000*                 _T_byte1 0015  
                _T_byte2 0014                  ___awdiv 0000                  ___awmod 0000  
                ___lwdiv 0000                  ___lwmod 0000                  __ptext1 0000  
                __ptext2 0000                  __ptext3 0000                  __ptext4 0000  
                __ptext5 0000                  __ptext6 0000                  __ptext7 0000  
                __ptext8 0000                  __ptext9 0000                  _lcd_cmd 0000* 
                _lcd_msg 0000*         __size_of_strcat 0029         ___awmod@dividend 0002  
   __size_of_START_DHT11 001B                  clrloop0 0001     end_of_initialization 0009  
                itoa@buf 0009                  itoa@val 0004               _uniHR_char 001C  
                utoa@buf 0003                  utoa@val 0008                _PORTDbits 0008  
              _TRISDbits 0088          ?_inicializacion 0000           _CHECK_RESPONSE 0000  
              ReadData@i 0002                ReadData@j 0003           __end_of_strcat 0029  
    start_initialization 0000   __end_of_CHECK_RESPONSE 0020        __size_of_ReadData 0042  
               ??_strcat 0001                ___latbits 0002            __pcstackBANK0 0000  
              _decHR_int 0002                _decT_char 0021          ?_CHECK_RESPONSE 0000  
       ___lwdiv@dividend 0002                 ?___awdiv 0000                 ?___awmod 0000  
               ?___lwdiv 0000                 ?___lwmod 0000                _lcd_msg$0 0000  
              __pstrings 0000                 ?_lcd_cmd 0000                 ?_lcd_msg 0000  
       ___lwdiv@quotient 0005                clear_ram0 0000                _uniHR_int 0004  
              _uniT_char 0026              __stringbase 0005            ??_START_DHT11 0000  
               _RH_byte1 0013                 _RH_byte2 0012         ??_inicializacion 0000  
               _ReadData 0000         __size_of___awdiv 0067         __size_of___awmod 0059  
       __size_of___lwdiv 0044         __size_of___lwmod 003A       __end_of__stringtab 0006  
               _decT_int 0006               strcat@from 0000          ___lwdiv@divisor 0000  
        ___lwdiv@counter 0007                 __ptext10 0000                 __ptext11 0000  
      __CFG_BOR4V$BOR40V 0000      __end_of_START_DHT11 001B            __size_of_LOOP 0167  
          __size_of_main 0020            __size_of_itoa 0026            __size_of_utoa 0072  
               _uniT_int 0008         ??_CHECK_RESPONSE 0000                 itoa@base 0006  
       ___lwmod@dividend 0002                stringcode 0000                 utoa@base 000A  
            _START_DHT11 0000                 strcat@cp 0003                 strcat@to 0002  
        ___lwmod@divisor 0000          ___lwmod@counter 0005                 stringdir 0000  
               stringtab 0000  
