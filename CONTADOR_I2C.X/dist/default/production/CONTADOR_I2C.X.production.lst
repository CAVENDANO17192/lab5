

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 27 02:06:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0014                     _SSPCON	set	20
   283  0008                     _PORTDbits	set	8
   284  0005                     _PORTA	set	5
   285  0009                     _PORTE	set	9
   286  0007                     _PORTC	set	7
   287  0006                     _PORTB	set	6
   288  0008                     _PORTD	set	8
   289  0013                     _SSPBUF	set	19
   290  0014                     _SSPCONbits	set	20
   291  000C                     _PIR1bits	set	12
   292  0063                     _SSPIF	set	99
   293  005E                     _PEIE	set	94
   294  005F                     _GIE	set	95
   295  0091                     _SSPCON2bits	set	145
   296  0087                     _TRISCbits	set	135
   297  0094                     _SSPSTAT	set	148
   298  0093                     _SSPADD	set	147
   299  0091                     _SSPCON2	set	145
   300  0089                     _TRISE	set	137
   301  0088                     _TRISD	set	136
   302  0087                     _TRISC	set	135
   303  0086                     _TRISB	set	134
   304  0085                     _TRISA	set	133
   305  008F                     _OSCCONbits	set	143
   306  0094                     _SSPSTATbits	set	148
   307  0463                     _SSPIE	set	1123
   308  043C                     _TRISC4	set	1084
   309  043B                     _TRISC3	set	1083
   310  04A0                     _BF	set	1184
   311  0189                     _ANSELH	set	393
   312  0188                     _ANSEL	set	392
   313                           
   314                           ; #config settings
   315  0000                     
   316                           	psect	cinit
   317  000F                     start_initialization:	
   318  000F                     __initialization:	
   319                           
   320                           ; Clear objects allocated to COMMON
   321  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   322  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   323  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   324  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   325  0013                     end_of_initialization:	
   326                           ;End of C runtime variable initialization code
   327                           
   328  0013                     __end_of__initialization:	
   329  0013  0183               	clrf	3
   330  0014  120A  118A  28C7   	ljmp	_main	;jump to C main() function
   331                           
   332                           	psect	bssCOMMON
   333  0075                     __pbssCOMMON:	
   334  0075                     _antireboteB:	
   335  0075                     	ds	1
   336  0076                     _antireboteA:	
   337  0076                     	ds	1
   338  0077                     _CONT:	
   339  0077                     	ds	1
   340  0078                     _z:	
   341  0078                     	ds	1
   342                           
   343                           	psect	cstackCOMMON
   344  0070                     __pcstackCOMMON:	
   345  0070                     ?_I2C_Slave_Init:	
   346  0070                     ?_LOOP:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_isr:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_isr:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_main:	
   356                           ; 1 bytes @ 0x0
   357                           
   358                           
   359                           ; 1 bytes @ 0x0
   360  0070                     	ds	3
   361  0073                     ??_I2C_Slave_Init:	
   362  0073                     ??_LOOP:	
   363                           ; 1 bytes @ 0x3
   364                           
   365  0073                     I2C_Slave_Init@address:	
   366                           ; 1 bytes @ 0x3
   367                           
   368                           
   369                           ; 1 bytes @ 0x3
   370  0073                     	ds	2
   371  0075                     ??_main:	
   372                           
   373                           	psect	maintext
   374  00C7                     __pmaintext:	
   375                           ; 1 bytes @ 0x5
   376 ;;
   377 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   378 ;;
   379 ;; *************** function _main *****************
   380 ;; Defined at:
   381 ;;		line 82 in file "CONT_4.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0, pclath, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : B00/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   395 ;;      Params:         0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels required when called:    2
   401 ;; This function calls:
   402 ;;		_I2C_Slave_Init
   403 ;;		_LOOP
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           
   410                           ;psect for function _main
   411  00C7                     _main:	
   412  00C7                     l822:	
   413                           ;incstack = 0
   414                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   415                           
   416                           
   417                           ;CONT_4.c: 83:     OSCCONbits.IRCF = 0b111;
   418  00C7  3070               	movlw	112
   419  00C8  1683               	bsf	3,5	;RP0=1, select bank1
   420  00C9  1303               	bcf	3,6	;RP1=0, select bank1
   421  00CA  048F               	iorwf	15,f	;volatile
   422  00CB                     l824:	
   423                           
   424                           ;CONT_4.c: 84:     OSCCONbits.OSTS= 0;
   425  00CB  118F               	bcf	15,3	;volatile
   426  00CC                     l826:	
   427                           
   428                           ;CONT_4.c: 85:     OSCCONbits.HTS = 0;
   429  00CC  110F               	bcf	15,2	;volatile
   430  00CD                     l828:	
   431                           
   432                           ;CONT_4.c: 86:     OSCCONbits.LTS = 0;
   433  00CD  108F               	bcf	15,1	;volatile
   434  00CE                     l830:	
   435                           
   436                           ;CONT_4.c: 87:     OSCCONbits.SCS = 1;
   437  00CE  140F               	bsf	15,0	;volatile
   438  00CF                     l832:	
   439                           
   440                           ;CONT_4.c: 89:     TRISA = 0b00000000;
   441  00CF  0185               	clrf	5	;volatile
   442  00D0                     l834:	
   443                           
   444                           ;CONT_4.c: 90:     TRISB = 0;
   445  00D0  0186               	clrf	6	;volatile
   446  00D1                     l836:	
   447                           
   448                           ;CONT_4.c: 91:     TRISC = 0b00011000;
   449  00D1  3018               	movlw	24
   450  00D2  0087               	movwf	7	;volatile
   451  00D3                     l838:	
   452                           
   453                           ;CONT_4.c: 92:     TRISD = 0b00000011;
   454  00D3  3003               	movlw	3
   455  00D4  0088               	movwf	8	;volatile
   456  00D5                     l840:	
   457                           
   458                           ;CONT_4.c: 93:     TRISE = 0;
   459  00D5  0189               	clrf	9	;volatile
   460  00D6                     l842:	
   461                           
   462                           ;CONT_4.c: 94:     ANSEL = 0b00000000;
   463  00D6  1683               	bsf	3,5	;RP0=1, select bank3
   464  00D7  1703               	bsf	3,6	;RP1=1, select bank3
   465  00D8  0188               	clrf	8	;volatile
   466  00D9                     l844:	
   467                           
   468                           ;CONT_4.c: 95:     ANSELH = 0;
   469  00D9  0189               	clrf	9	;volatile
   470  00DA                     l846:	
   471                           
   472                           ;CONT_4.c: 96:     PORTB = 0;
   473  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   474  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   475  00DC  0186               	clrf	6	;volatile
   476  00DD                     l848:	
   477                           
   478                           ;CONT_4.c: 97:     PORTC = 0;
   479  00DD  0187               	clrf	7	;volatile
   480  00DE                     l850:	
   481                           
   482                           ;CONT_4.c: 98:     PORTD = 0;
   483  00DE  0188               	clrf	8	;volatile
   484  00DF                     l852:	
   485                           
   486                           ;CONT_4.c: 99:     PORTE = 0;
   487  00DF  0189               	clrf	9	;volatile
   488  00E0                     l854:	
   489                           
   490                           ;CONT_4.c: 100:     PORTA = 0;
   491  00E0  0185               	clrf	5	;volatile
   492  00E1                     l856:	
   493                           
   494                           ;CONT_4.c: 103:     CONT = 0;
   495  00E1  01F7               	clrf	_CONT
   496  00E2                     l858:	
   497                           
   498                           ;CONT_4.c: 104:     I2C_Slave_Init(0x10);
   499  00E2  3010               	movlw	16
   500  00E3  120A  118A  20F0  120A  118A  	fcall	_I2C_Slave_Init
   501  00E8                     l860:	
   502                           
   503                           ;CONT_4.c: 106:       LOOP();
   504  00E8  120A  118A  2078  120A  118A  	fcall	_LOOP
   505  00ED                     l75:	
   506  00ED  120A  118A  280C   	ljmp	start
   507  00F0                     __end_of_main:	
   508                           
   509                           	psect	text1
   510  0078                     __ptext1:	
   511 ;; *************** function _LOOP *****************
   512 ;; Defined at:
   513 ;;		line 110 in file "CONT_4.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   527 ;;      Params:         0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0
   529 ;;      Temps:          2       0       0       0       0
   530 ;;      Totals:         2       0       0       0       0
   531 ;;Total ram usage:        2 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; Hardware stack levels required when called:    1
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           
   542                           ;psect for function _LOOP
   543  0078                     _LOOP:	
   544  0078                     l78:	
   545                           ;incstack = 0
   546                           ; Regs used in _LOOP: [wreg+status,2+status,0]
   547                           ;CONT_4.c: 111:     while(1){
   548                           
   549                           
   550                           ;CONT_4.c: 112: if(PORTDbits.RD0==1){
   551  0078  1283               	bcf	3,5	;RP0=0, select bank0
   552  0079  1303               	bcf	3,6	;RP1=0, select bank0
   553  007A  1C08               	btfss	8,0	;volatile
   554  007B  287D               	goto	u11
   555  007C  287E               	goto	u10
   556  007D                     u11:	
   557  007D  2889               	goto	l752
   558  007E                     u10:	
   559  007E                     l748:	
   560                           
   561                           ;CONT_4.c: 113:             antireboteA = 1;
   562  007E  01F6               	clrf	_antireboteA
   563  007F  0AF6               	incf	_antireboteA,f
   564  0080                     l750:	
   565                           
   566                           ;CONT_4.c: 114:             _delay((unsigned long)((6)*(4000000/4000.0)));
   567  0080  3008               	movlw	8
   568  0081  00F4               	movwf	??_LOOP+1
   569  0082  30C9               	movlw	201
   570  0083  00F3               	movwf	??_LOOP
   571  0084                     u217:	
   572  0084  0BF3               	decfsz	??_LOOP,f
   573  0085  2884               	goto	u217
   574  0086  0BF4               	decfsz	??_LOOP+1,f
   575  0087  2884               	goto	u217
   576  0088  2889               	nop2
   577  0089                     l752:	
   578                           
   579                           ;CONT_4.c: 116:             if(PORTDbits.RD0!=1 && antireboteA==1){
   580  0089  1283               	bcf	3,5	;RP0=0, select bank0
   581  008A  1303               	bcf	3,6	;RP1=0, select bank0
   582  008B  1808               	btfsc	8,0	;volatile
   583  008C  288E               	goto	u21
   584  008D  288F               	goto	u20
   585  008E                     u21:	
   586  008E  28A3               	goto	l766
   587  008F                     u20:	
   588  008F                     l754:	
   589  008F  0376               	decf	_antireboteA,w
   590  0090  1D03               	btfss	3,2
   591  0091  2893               	goto	u31
   592  0092  2894               	goto	u30
   593  0093                     u31:	
   594  0093  28A3               	goto	l766
   595  0094                     u30:	
   596  0094                     l756:	
   597                           
   598                           ;CONT_4.c: 118:                 antireboteA=0;
   599  0094  01F6               	clrf	_antireboteA
   600  0095                     l758:	
   601                           
   602                           ;CONT_4.c: 119:             CONT= CONT+1;
   603  0095  0877               	movf	_CONT,w
   604  0096  3E01               	addlw	1
   605  0097  00F3               	movwf	??_LOOP
   606  0098  0873               	movf	??_LOOP,w
   607  0099  00F7               	movwf	_CONT
   608  009A                     l760:	
   609                           
   610                           ;CONT_4.c: 120:             PORTA = CONT;
   611  009A  0877               	movf	_CONT,w
   612  009B  0085               	movwf	5	;volatile
   613  009C                     l762:	
   614                           
   615                           ;CONT_4.c: 121:                     if(CONT==16){
   616  009C  3010               	movlw	16
   617  009D  0677               	xorwf	_CONT,w
   618  009E  1D03               	btfss	3,2
   619  009F  28A1               	goto	u41
   620  00A0  28A2               	goto	u40
   621  00A1                     u41:	
   622  00A1  28A3               	goto	l766
   623  00A2                     u40:	
   624  00A2                     l764:	
   625                           
   626                           ;CONT_4.c: 123:                         CONT = 0;
   627  00A2  01F7               	clrf	_CONT
   628  00A3                     l766:	
   629                           
   630                           ;CONT_4.c: 126: if(PORTDbits.RD1==1){
   631  00A3  1C88               	btfss	8,1	;volatile
   632  00A4  28A6               	goto	u51
   633  00A5  28A7               	goto	u50
   634  00A6                     u51:	
   635  00A6  28B2               	goto	l772
   636  00A7                     u50:	
   637  00A7                     l768:	
   638                           
   639                           ;CONT_4.c: 127:             antireboteB = 1;
   640  00A7  01F5               	clrf	_antireboteB
   641  00A8  0AF5               	incf	_antireboteB,f
   642  00A9                     l770:	
   643                           
   644                           ;CONT_4.c: 128:             _delay((unsigned long)((6)*(4000000/4000.0)));
   645  00A9  3008               	movlw	8
   646  00AA  00F4               	movwf	??_LOOP+1
   647  00AB  30C9               	movlw	201
   648  00AC  00F3               	movwf	??_LOOP
   649  00AD                     u227:	
   650  00AD  0BF3               	decfsz	??_LOOP,f
   651  00AE  28AD               	goto	u227
   652  00AF  0BF4               	decfsz	??_LOOP+1,f
   653  00B0  28AD               	goto	u227
   654  00B1  28B2               	nop2
   655  00B2                     l772:	
   656                           
   657                           ;CONT_4.c: 130:             if(PORTDbits.RD1!=1 && antireboteB==1){
   658  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   659  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   660  00B4  1888               	btfsc	8,1	;volatile
   661  00B5  28B7               	goto	u61
   662  00B6  28B8               	goto	u60
   663  00B7                     u61:	
   664  00B7  2878               	goto	l78
   665  00B8                     u60:	
   666  00B8                     l774:	
   667  00B8  0375               	decf	_antireboteB,w
   668  00B9  1D03               	btfss	3,2
   669  00BA  28BC               	goto	u71
   670  00BB  28BD               	goto	u70
   671  00BC                     u71:	
   672  00BC  2878               	goto	l78
   673  00BD                     u70:	
   674  00BD                     l776:	
   675                           
   676                           ;CONT_4.c: 132:                 antireboteB=0;
   677  00BD  01F5               	clrf	_antireboteB
   678  00BE                     l778:	
   679                           
   680                           ;CONT_4.c: 133:             CONT= CONT-1;
   681  00BE  0877               	movf	_CONT,w
   682  00BF  3EFF               	addlw	255
   683  00C0  00F3               	movwf	??_LOOP
   684  00C1  0873               	movf	??_LOOP,w
   685  00C2  00F7               	movwf	_CONT
   686  00C3                     l780:	
   687                           
   688                           ;CONT_4.c: 134:             PORTA = CONT;
   689  00C3  0877               	movf	_CONT,w
   690  00C4  0085               	movwf	5	;volatile
   691                           
   692                           ;CONT_4.c: 135:                     if(CONT==256){
   693  00C5  2878               	goto	l78
   694  00C6  0008               	return
   695  00C7                     __end_of_LOOP:	
   696                           
   697                           	psect	text2
   698  00F0                     __ptext2:	
   699 ;; *************** function _I2C_Slave_Init *****************
   700 ;; Defined at:
   701 ;;		line 76 in file "I2C_SLAVE.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  address         1    wreg     unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  address         1    3[COMMON] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         1       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0
   718 ;;      Totals:         1       0       0       0       0
   719 ;;Total ram usage:        1 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    1
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           
   730                           ;psect for function _I2C_Slave_Init
   731  00F0                     _I2C_Slave_Init:	
   732                           
   733                           ;incstack = 0
   734                           ; Regs used in _I2C_Slave_Init: [wreg]
   735                           ;I2C_Slave_Init@address stored from wreg
   736  00F0  00F3               	movwf	I2C_Slave_Init@address
   737  00F1                     l734:	
   738                           
   739                           ;I2C_SLAVE.c: 77:     SSPADD = address;
   740  00F1  0873               	movf	I2C_Slave_Init@address,w
   741  00F2  1683               	bsf	3,5	;RP0=1, select bank1
   742  00F3  1303               	bcf	3,6	;RP1=0, select bank1
   743  00F4  0093               	movwf	19	;volatile
   744                           
   745                           ;I2C_SLAVE.c: 78:     SSPCON = 0x36;
   746  00F5  3036               	movlw	54
   747  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   748  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   749  00F8  0094               	movwf	20	;volatile
   750                           
   751                           ;I2C_SLAVE.c: 79:     SSPSTAT = 0x80;
   752  00F9  3080               	movlw	128
   753  00FA  1683               	bsf	3,5	;RP0=1, select bank1
   754  00FB  1303               	bcf	3,6	;RP1=0, select bank1
   755  00FC  0094               	movwf	20	;volatile
   756                           
   757                           ;I2C_SLAVE.c: 80:     SSPCON2 = 0x01;
   758  00FD  3001               	movlw	1
   759  00FE  0091               	movwf	17	;volatile
   760  00FF                     l736:	
   761                           
   762                           ;I2C_SLAVE.c: 81:     TRISC3 = 1;
   763  00FF  1587               	bsf	7,3	;volatile
   764  0100                     l738:	
   765                           
   766                           ;I2C_SLAVE.c: 82:     TRISC4 = 1;
   767  0100  1607               	bsf	7,4	;volatile
   768  0101                     l740:	
   769                           
   770                           ;I2C_SLAVE.c: 83:     GIE = 1;
   771  0101  178B               	bsf	11,7	;volatile
   772  0102                     l742:	
   773                           
   774                           ;I2C_SLAVE.c: 84:     PEIE = 1;
   775  0102  170B               	bsf	11,6	;volatile
   776  0103                     l744:	
   777                           
   778                           ;I2C_SLAVE.c: 85:     SSPIF = 0;
   779  0103  1283               	bcf	3,5	;RP0=0, select bank0
   780  0104  1303               	bcf	3,6	;RP1=0, select bank0
   781  0105  118C               	bcf	12,3	;volatile
   782  0106                     l746:	
   783                           
   784                           ;I2C_SLAVE.c: 86:     SSPIE = 1;
   785  0106  1683               	bsf	3,5	;RP0=1, select bank1
   786  0107  1303               	bcf	3,6	;RP1=0, select bank1
   787  0108  158C               	bsf	12,3	;volatile
   788  0109                     l142:	
   789  0109  0008               	return
   790  010A                     __end_of_I2C_Slave_Init:	
   791                           
   792                           	psect	text3
   793  0017                     __ptext3:	
   794 ;; *************** function _isr *****************
   795 ;; Defined at:
   796 ;;		line 47 in file "CONT_4.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0
   812 ;;      Temps:          3       0       0       0       0
   813 ;;      Totals:         3       0       0       0       0
   814 ;;Total ram usage:        3 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		Interrupt level 1
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _isr
   825  0017                     _isr:	
   826  0017                     i1l788:	
   827                           
   828                           ;CONT_4.c: 48:    if(PIR1bits.SSPIF == 1){
   829  0017  1283               	bcf	3,5	;RP0=0, select bank0
   830  0018  1303               	bcf	3,6	;RP1=0, select bank0
   831  0019  1D8C               	btfss	12,3	;volatile
   832  001A  281C               	goto	u10_21
   833  001B  281D               	goto	u10_20
   834  001C                     u10_21:	
   835  001C  2871               	goto	i1l70
   836  001D                     u10_20:	
   837  001D                     i1l790:	
   838                           
   839                           ;CONT_4.c: 50:         SSPCONbits.CKP = 0;
   840  001D  1214               	bcf	20,4	;volatile
   841                           
   842                           ;CONT_4.c: 52:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   843  001E  1B14               	btfsc	20,6	;volatile
   844  001F  2821               	goto	u11_21
   845  0020  2822               	goto	u11_20
   846  0021                     u11_21:	
   847  0021  2826               	goto	i1l794
   848  0022                     u11_20:	
   849  0022                     i1l792:	
   850  0022  1F94               	btfss	20,7	;volatile
   851  0023  2825               	goto	u12_21
   852  0024  2826               	goto	u12_20
   853  0025                     u12_21:	
   854  0025  282D               	goto	i1l802
   855  0026                     u12_20:	
   856  0026                     i1l794:	
   857                           
   858                           ;CONT_4.c: 53:             z = SSPBUF;
   859  0026  0813               	movf	19,w	;volatile
   860  0027  00F0               	movwf	??_isr
   861  0028  0870               	movf	??_isr,w
   862  0029  00F8               	movwf	_z
   863  002A                     i1l796:	
   864                           
   865                           ;CONT_4.c: 54:             SSPCONbits.SSPOV = 0;
   866  002A  1314               	bcf	20,6	;volatile
   867  002B                     i1l798:	
   868                           
   869                           ;CONT_4.c: 55:             SSPCONbits.WCOL = 0;
   870  002B  1394               	bcf	20,7	;volatile
   871  002C                     i1l800:	
   872                           
   873                           ;CONT_4.c: 56:             SSPCONbits.CKP = 1;
   874  002C  1614               	bsf	20,4	;volatile
   875  002D                     i1l802:	
   876                           
   877                           ;CONT_4.c: 59:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   878  002D  1683               	bsf	3,5	;RP0=1, select bank1
   879  002E  1303               	bcf	3,6	;RP1=0, select bank1
   880  002F  1A94               	btfsc	20,5	;volatile
   881  0030  2832               	goto	u13_21
   882  0031  2833               	goto	u13_20
   883  0032                     u13_21:	
   884  0032  284E               	goto	i1l61
   885  0033                     u13_20:	
   886  0033                     i1l804:	
   887  0033  1914               	btfsc	20,2	;volatile
   888  0034  2836               	goto	u14_21
   889  0035  2837               	goto	u14_20
   890  0036                     u14_21:	
   891  0036  284E               	goto	i1l61
   892  0037                     u14_20:	
   893  0037                     i1l806:	
   894                           
   895                           ;CONT_4.c: 61:             z = SSPBUF;
   896  0037  1283               	bcf	3,5	;RP0=0, select bank0
   897  0038  1303               	bcf	3,6	;RP1=0, select bank0
   898  0039  0813               	movf	19,w	;volatile
   899  003A  00F0               	movwf	??_isr
   900  003B  0870               	movf	??_isr,w
   901  003C  00F8               	movwf	_z
   902  003D                     i1l808:	
   903                           
   904                           ;CONT_4.c: 63:             PIR1bits.SSPIF = 0;
   905  003D  118C               	bcf	12,3	;volatile
   906  003E                     i1l810:	
   907                           
   908                           ;CONT_4.c: 64:             SSPCONbits.CKP = 1;
   909  003E  1614               	bsf	20,4	;volatile
   910  003F                     i1l62:	
   911                           ;CONT_4.c: 65:             while(!SSPSTATbits.BF);
   912                           
   913  003F  1683               	bsf	3,5	;RP0=1, select bank1
   914  0040  1303               	bcf	3,6	;RP1=0, select bank1
   915  0041  1C14               	btfss	20,0	;volatile
   916  0042  2844               	goto	u15_21
   917  0043  2845               	goto	u15_20
   918  0044                     u15_21:	
   919  0044  283F               	goto	i1l62
   920  0045                     u15_20:	
   921  0045                     i1l812:	
   922                           
   923                           ;CONT_4.c: 66:             PORTD = SSPBUF;
   924  0045  1283               	bcf	3,5	;RP0=0, select bank0
   925  0046  1303               	bcf	3,6	;RP1=0, select bank0
   926  0047  0813               	movf	19,w	;volatile
   927  0048  0088               	movwf	8	;volatile
   928                           
   929                           ;CONT_4.c: 67:             _delay((unsigned long)((250)*(4000000/4000000.0)));
   930  0049  3053               	movlw	83
   931  004A  00F0               	movwf	??_isr
   932  004B                     u23_27:	
   933  004B  0BF0               	decfsz	??_isr,f
   934  004C  284B               	goto	u23_27
   935                           
   936                           ;CONT_4.c: 69:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   937  004D  286E               	goto	i1l65
   938  004E                     i1l61:	
   939  004E  1A94               	btfsc	20,5	;volatile
   940  004F  2851               	goto	u16_21
   941  0050  2852               	goto	u16_20
   942  0051                     u16_21:	
   943  0051  286E               	goto	i1l65
   944  0052                     u16_20:	
   945  0052                     i1l814:	
   946  0052  1D14               	btfss	20,2	;volatile
   947  0053  2855               	goto	u17_21
   948  0054  2856               	goto	u17_20
   949  0055                     u17_21:	
   950  0055  286E               	goto	i1l65
   951  0056                     u17_20:	
   952  0056                     i1l816:	
   953                           
   954                           ;CONT_4.c: 70:             z = SSPBUF;
   955  0056  1283               	bcf	3,5	;RP0=0, select bank0
   956  0057  1303               	bcf	3,6	;RP1=0, select bank0
   957  0058  0813               	movf	19,w	;volatile
   958  0059  00F0               	movwf	??_isr
   959  005A  0870               	movf	??_isr,w
   960  005B  00F8               	movwf	_z
   961  005C                     i1l818:	
   962                           
   963                           ;CONT_4.c: 71:             BF = 0;
   964  005C  1683               	bsf	3,5	;RP0=1, select bank1
   965  005D  1303               	bcf	3,6	;RP1=0, select bank1
   966  005E  1014               	bcf	20,0	;volatile
   967                           
   968                           ;CONT_4.c: 72:             SSPBUF = CONT;
   969  005F  0877               	movf	_CONT,w
   970  0060  1283               	bcf	3,5	;RP0=0, select bank0
   971  0061  1303               	bcf	3,6	;RP1=0, select bank0
   972  0062  0093               	movwf	19	;volatile
   973  0063                     i1l820:	
   974                           
   975                           ;CONT_4.c: 73:             SSPCONbits.CKP = 1;
   976  0063  1614               	bsf	20,4	;volatile
   977                           
   978                           ;CONT_4.c: 74:             _delay((unsigned long)((250)*(4000000/4000000.0)));
   979  0064  3053               	movlw	83
   980  0065  00F0               	movwf	??_isr
   981  0066                     u24_27:	
   982  0066  0BF0               	decfsz	??_isr,f
   983  0067  2866               	goto	u24_27
   984  0068                     i1l67:	
   985                           ;CONT_4.c: 75:             while(SSPSTATbits.BF);
   986                           
   987  0068  1683               	bsf	3,5	;RP0=1, select bank1
   988  0069  1303               	bcf	3,6	;RP1=0, select bank1
   989  006A  1814               	btfsc	20,0	;volatile
   990  006B  286D               	goto	u18_21
   991  006C  286E               	goto	u18_20
   992  006D                     u18_21:	
   993  006D  2868               	goto	i1l67
   994  006E                     u18_20:	
   995  006E                     i1l65:	
   996                           
   997                           ;CONT_4.c: 78:         PIR1bits.SSPIF = 0;
   998  006E  1283               	bcf	3,5	;RP0=0, select bank0
   999  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0070  118C               	bcf	12,3	;volatile
  1001  0071                     i1l70:	
  1002  0071  0872               	movf	??_isr+2,w
  1003  0072  008A               	movwf	10
  1004  0073  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1005  0074  0083               	movwf	3
  1006  0075  0EFE               	swapf	btemp,f
  1007  0076  0E7E               	swapf	btemp,w
  1008  0077  0009               	retfie
  1009  0078                     __end_of_isr:	
  1010  007E                     btemp	set	126	;btemp
  1011  007E                     wtemp0	set	126
  1012                           
  1013                           	psect	intentry
  1014  0004                     __pintentry:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _isr: [wreg]
  1017                           
  1018  0004                     interrupt_function:	
  1019  007E                     saved_w	set	btemp
  1020  0004  00FE               	movwf	btemp
  1021  0005  0E03               	swapf	3,w
  1022  0006  00F1               	movwf	??_isr+1
  1023  0007  080A               	movf	10,w
  1024  0008  00F2               	movwf	??_isr+2
  1025  0009  120A  118A  2817   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LOOP

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                     _I2C_Slave_Init
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _LOOP

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 27 02:06:50 2020

                       _z 0078               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l75 00ED                        l78 0078  
                      u10 007E                        u11 007D                        u20 008F  
                      u21 008E                        u30 0094                        u31 0093  
                      u40 00A2                        u41 00A1                        u50 00A7  
                      u51 00A6                        u60 00B8                        u61 00B7  
                      u70 00BD                        u71 00BC                       l142 0109  
                     l740 0101                       l742 0102                       l734 00F1  
                     l750 0080                       l830 00CE                       l822 00C7  
                     l744 0103                       l736 00FF                       l760 009A  
                     l752 0089                       l840 00D5                       l832 00CF  
                     l824 00CB                       l746 0106                       l738 0100  
                     l770 00A9                       l762 009C                       l754 008F  
                     l850 00DE                       l842 00D6                       l834 00D0  
                     l826 00CC                       l780 00C3                       l772 00B2  
                     l764 00A2                       l756 0094                       l748 007E  
                     l860 00E8                       l852 00DF                       l844 00D9  
                     l836 00D1                       l828 00CD                       l774 00B8  
                     l758 0095                       l766 00A3                       l854 00E0  
                     l846 00DA                       l838 00D3                       l776 00BD  
                     l768 00A7                       l856 00E1                       l848 00DD  
                     l778 00BE                       l858 00E2                       _GIE 005F  
                     u217 0084                       u227 00AD              __CFG_CPD$OFF 0000  
                     _isr 0017              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    _CONT 0077                      _PEIE 005E                      i1l61 004E  
                    i1l62 003F                      i1l70 0071                      i1l65 006E  
                    i1l67 0068                      _LOOP 0078              __CFG_WRT$OFF 0000  
                    _main 00C7                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_isr 0070                     ?_LOOP 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l800 002C                     i1l810 003E                     i1l802 002D  
                   i1l820 0063                     i1l812 0045                     i1l804 0033  
                   i1l814 0052                     i1l806 0037                     i1l816 0056  
                   i1l808 003D                     i1l818 005C                     i1l790 001D  
                   i1l792 0022                     i1l794 0026                     i1l796 002A  
                   i1l788 0017                     i1l798 002B                     u10_20 001D  
                   u10_21 001C                     u11_20 0022                     u11_21 0021  
                   u12_20 0026                     u12_21 0025                     u13_20 0033  
                   u13_21 0032                     u14_20 0037                     u14_21 0036  
                   u15_20 0045                     u15_21 0044                     u23_27 004B  
                   u16_20 0052                     u16_21 0051                     u24_27 0066  
                   u17_20 0056                     u17_21 0055                     u18_20 006E  
                   u18_21 006D                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _SSPIE 0463                     _TRISE 0089  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
            __end_of_LOOP 00C7            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 00F0                    ??_LOOP 0073                    ??_main 0075  
                  _ANSELH 0189                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPBUF 0013                    _SSPCON 0014  
          __CFG_PWRTE$OFF 0000                    saved_w 007E   __end_of__initialization 0013  
          __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 001A     I2C_Slave_Init@address 0073  
              __pmaintext 00C7                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                   __ptext1 0078                   __ptext2 00F0  
                 __ptext3 0017              __size_of_isr 0061      end_of_initialization 0013  
          _I2C_Slave_Init 00F0                 _PORTDbits 0008                 _TRISCbits 0087  
  __end_of_I2C_Slave_Init 010A       start_initialization 000F               __end_of_isr 0078  
__CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0070               __pbssCOMMON 0075  
               ___latbits 0002         interrupt_function 0004               _antireboteA 0076  
             _antireboteB 0075                  _PIR1bits 000C         __CFG_BOR4V$BOR40V 0000  
           __size_of_LOOP 004F          ??_I2C_Slave_Init 0073             __size_of_main 0029  
                intlevel1 0000                _OSCCONbits 008F               _SSPCON2bits 0091  
              _SSPCONbits 0014  
