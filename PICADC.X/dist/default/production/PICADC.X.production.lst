

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 26 20:16:05 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0013                     _SSPBUF	set	19
   210  0014                     _SSPCON	set	20
   211  001E                     _ADRESH	set	30
   212  0008                     _PORTDbits	set	8
   213  001F                     _ADCON0bits	set	31
   214  0009                     _PORTE	set	9
   215  0008                     _PORTD	set	8
   216  0007                     _PORTC	set	7
   217  0006                     _PORTB	set	6
   218  0005                     _PORTA	set	5
   219  0094                     _SSPSTAT	set	148
   220  0093                     _SSPADD	set	147
   221  0091                     _SSPCON2	set	145
   222  009F                     _ADCON1bits	set	159
   223  0089                     _TRISE	set	137
   224  0087                     _TRISC	set	135
   225  0088                     _TRISD	set	136
   226  0086                     _TRISB	set	134
   227  0085                     _TRISA	set	133
   228  008F                     _OSCCONbits	set	143
   229  048C                     _ACKEN	set	1164
   230  048D                     _ACKDT	set	1165
   231  048B                     _RCEN	set	1163
   232  048A                     _PEN	set	1162
   233  0489                     _RSEN	set	1161
   234  0488                     _SEN	set	1160
   235  0189                     _ANSELH	set	393
   236  0188                     _ANSEL	set	392
   237                           
   238                           ; #config settings
   239  0000                     
   240                           	psect	cinit
   241  07F9                     start_initialization:	
   242  07F9                     __initialization:	
   243                           
   244                           ; Clear objects allocated to BANK0
   245  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   246  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   247  07FB  01A8               	clrf	__pbssBANK0& (0+127)
   248  07FC                     end_of_initialization:	
   249                           ;End of C runtime variable initialization code
   250                           
   251  07FC                     __end_of__initialization:	
   252  07FC  0183               	clrf	3
   253  07FD  120A  118A  2F52   	ljmp	_main	;jump to C main() function
   254                           
   255                           	psect	bssBANK0
   256  0028                     __pbssBANK0:	
   257  0028                     _y:	
   258  0028                     	ds	1
   259                           
   260                           	psect	cstackCOMMON
   261  0070                     __pcstackCOMMON:	
   262  0070                     ?_LOOP:	
   263  0070                     ?_ANALOGICO:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ??_ANALOGICO:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_I2C_Master_Start:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ??_I2C_Master_Start:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_I2C_Master_Write:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_I2C_Master_Stop:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ??_I2C_Master_Stop:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_main:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_I2C_Master_Wait:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ??_I2C_Master_Wait:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?___lldiv:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     I2C_Master_Write@d:	
   297                           ; 4 bytes @ 0x0
   298                           
   299  0070                     ___lldiv@divisor:	
   300                           ; 2 bytes @ 0x0
   301                           
   302                           
   303                           ; 4 bytes @ 0x0
   304  0070                     	ds	2
   305  0072                     ??_LOOP:	
   306  0072                     ??_I2C_Master_Write:	
   307                           ; 1 bytes @ 0x2
   308                           
   309                           
   310                           ; 1 bytes @ 0x2
   311  0072                     	ds	2
   312  0074                     ___lldiv@dividend:	
   313                           
   314                           ; 4 bytes @ 0x4
   315  0074                     	ds	4
   316  0078                     ??___lldiv:	
   317                           
   318                           ; 1 bytes @ 0x8
   319  0078                     	ds	1
   320  0079                     ___lldiv@quotient:	
   321                           
   322                           ; 4 bytes @ 0x9
   323  0079                     	ds	4
   324  007D                     ___lldiv@counter:	
   325                           
   326                           ; 1 bytes @ 0xD
   327  007D                     	ds	1
   328  007E                     ??_main:	
   329                           
   330                           	psect	cstackBANK0
   331  0020                     __pcstackBANK0:	
   332                           ; 1 bytes @ 0xE
   333                           
   334  0020                     ?_I2C_Master_Init:	
   335  0020                     I2C_Master_Init@c:	
   336                           ; 1 bytes @ 0x0
   337                           
   338                           
   339                           ; 4 bytes @ 0x0
   340  0020                     	ds	4
   341  0024                     ??_I2C_Master_Init:	
   342                           
   343                           ; 1 bytes @ 0x4
   344  0024                     	ds	4
   345                           
   346                           	psect	maintext
   347  0752                     __pmaintext:	
   348 ;;
   349 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   350 ;;
   351 ;; *************** function _main *****************
   352 ;; Defined at:
   353 ;;		line 50 in file "ADC_I2C.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, status,2, status,0, pclath, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : B00/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   367 ;;      Params:         0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0
   370 ;;      Totals:         0       0       0       0       0
   371 ;;Total ram usage:        0 bytes
   372 ;; Hardware stack levels required when called:    3
   373 ;; This function calls:
   374 ;;		_I2C_Master_Init
   375 ;;		_LOOP
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           
   382                           ;psect for function _main
   383  0752                     _main:	
   384  0752                     l921:	
   385                           ;incstack = 0
   386                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   387                           
   388                           
   389                           ;ADC_I2C.c: 52:     OSCCONbits.IRCF = 0b110;
   390  0752  1683               	bsf	3,5	;RP0=1, select bank1
   391  0753  1303               	bcf	3,6	;RP1=0, select bank1
   392  0754  080F               	movf	15,w	;volatile
   393  0755  398F               	andlw	-113
   394  0756  3860               	iorlw	96
   395  0757  008F               	movwf	15	;volatile
   396  0758                     l923:	
   397                           
   398                           ;ADC_I2C.c: 53:     OSCCONbits.OSTS= 0;
   399  0758  118F               	bcf	15,3	;volatile
   400  0759                     l925:	
   401                           
   402                           ;ADC_I2C.c: 54:     OSCCONbits.HTS = 0;
   403  0759  110F               	bcf	15,2	;volatile
   404  075A                     l927:	
   405                           
   406                           ;ADC_I2C.c: 55:     OSCCONbits.LTS = 0;
   407  075A  108F               	bcf	15,1	;volatile
   408  075B                     l929:	
   409                           
   410                           ;ADC_I2C.c: 56:     OSCCONbits.SCS = 1;
   411  075B  140F               	bsf	15,0	;volatile
   412  075C                     l931:	
   413                           
   414                           ;ADC_I2C.c: 58:     ANSEL = 0b00000001;
   415  075C  3001               	movlw	1
   416  075D  1683               	bsf	3,5	;RP0=1, select bank3
   417  075E  1703               	bsf	3,6	;RP1=1, select bank3
   418  075F  0088               	movwf	8	;volatile
   419  0760                     l933:	
   420                           
   421                           ;ADC_I2C.c: 59:     ANSELH= 0b00000000;
   422  0760  0189               	clrf	9	;volatile
   423  0761                     l935:	
   424                           
   425                           ;ADC_I2C.c: 60:     TRISA = 0b00000001;
   426  0761  3001               	movlw	1
   427  0762  1683               	bsf	3,5	;RP0=1, select bank1
   428  0763  1303               	bcf	3,6	;RP1=0, select bank1
   429  0764  0085               	movwf	5	;volatile
   430  0765                     l937:	
   431                           
   432                           ;ADC_I2C.c: 61:     TRISB = 0b00000000;
   433  0765  0186               	clrf	6	;volatile
   434  0766                     l939:	
   435                           
   436                           ;ADC_I2C.c: 62:     TRISD = 0b00000000;
   437  0766  0188               	clrf	8	;volatile
   438  0767                     l941:	
   439                           
   440                           ;ADC_I2C.c: 63:     TRISC = 0b00011000;
   441  0767  3018               	movlw	24
   442  0768  0087               	movwf	7	;volatile
   443  0769                     l943:	
   444                           
   445                           ;ADC_I2C.c: 64:     TRISE = 0;
   446  0769  0189               	clrf	9	;volatile
   447  076A                     l945:	
   448                           
   449                           ;ADC_I2C.c: 66:     PORTA = 0;
   450  076A  1283               	bcf	3,5	;RP0=0, select bank0
   451  076B  1303               	bcf	3,6	;RP1=0, select bank0
   452  076C  0185               	clrf	5	;volatile
   453  076D                     l947:	
   454                           
   455                           ;ADC_I2C.c: 67:     PORTB = 0;
   456  076D  0186               	clrf	6	;volatile
   457  076E                     l949:	
   458                           
   459                           ;ADC_I2C.c: 68:     PORTC = 0;
   460  076E  0187               	clrf	7	;volatile
   461  076F                     l951:	
   462                           
   463                           ;ADC_I2C.c: 69:     PORTD = 0;
   464  076F  0188               	clrf	8	;volatile
   465  0770                     l953:	
   466                           
   467                           ;ADC_I2C.c: 70:     PORTE = 0;
   468  0770  0189               	clrf	9	;volatile
   469  0771                     l955:	
   470                           
   471                           ;ADC_I2C.c: 72:     ADCON0bits.ADCS0 = 1;
   472  0771  171F               	bsf	31,6	;volatile
   473  0772                     l957:	
   474                           
   475                           ;ADC_I2C.c: 73:     ADCON0bits.ADCS1 = 0;
   476  0772  139F               	bcf	31,7	;volatile
   477  0773                     l959:	
   478                           
   479                           ;ADC_I2C.c: 74:     ADCON0bits.ADON = 1;
   480  0773  141F               	bsf	31,0	;volatile
   481  0774                     l961:	
   482                           
   483                           ;ADC_I2C.c: 75:     ADCON1bits.ADFM = 0;
   484  0774  1683               	bsf	3,5	;RP0=1, select bank1
   485  0775  1303               	bcf	3,6	;RP1=0, select bank1
   486  0776  139F               	bcf	31,7	;volatile
   487  0777                     l963:	
   488                           
   489                           ;ADC_I2C.c: 76:     ADCON1bits.VCFG0 = 0;
   490  0777  121F               	bcf	31,4	;volatile
   491  0778                     l965:	
   492                           
   493                           ;ADC_I2C.c: 77:     ADCON1bits.VCFG1 = 0;
   494  0778  129F               	bcf	31,5	;volatile
   495  0779                     l967:	
   496                           
   497                           ;ADC_I2C.c: 79:   I2C_Master_Init(100000);
   498  0779  3000               	movlw	0
   499  077A  1283               	bcf	3,5	;RP0=0, select bank0
   500  077B  1303               	bcf	3,6	;RP1=0, select bank0
   501  077C  00A3               	movwf	I2C_Master_Init@c+3
   502  077D  3001               	movlw	1
   503  077E  00A2               	movwf	I2C_Master_Init@c+2
   504  077F  3086               	movlw	134
   505  0780  00A1               	movwf	I2C_Master_Init@c+1
   506  0781  30A0               	movlw	160
   507  0782  00A0               	movwf	I2C_Master_Init@c
   508  0783  120A  118A  271C  120A  118A  	fcall	_I2C_Master_Init
   509  0788                     l969:	
   510                           
   511                           ;ADC_I2C.c: 80:   PORTDbits.RD1 = 1;
   512  0788  1283               	bcf	3,5	;RP0=0, select bank0
   513  0789  1303               	bcf	3,6	;RP1=0, select bank0
   514  078A  1488               	bsf	8,1	;volatile
   515  078B                     l971:	
   516                           
   517                           ;ADC_I2C.c: 81:   LOOP();
   518  078B  120A  118A  26E7  120A  118A  	fcall	_LOOP
   519  0790                     l77:	
   520  0790  120A  118A  2800   	ljmp	start
   521  0793                     __end_of_main:	
   522                           
   523                           	psect	text1
   524  06E7                     __ptext1:	
   525 ;; *************** function _LOOP *****************
   526 ;; Defined at:
   527 ;;		line 85 in file "ADC_I2C.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0, pclath, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   541 ;;      Params:         0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0
   543 ;;      Temps:          3       0       0       0       0
   544 ;;      Totals:         3       0       0       0       0
   545 ;;Total ram usage:        3 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    2
   548 ;; This function calls:
   549 ;;		_ANALOGICO
   550 ;;		_I2C_Master_Start
   551 ;;		_I2C_Master_Stop
   552 ;;		_I2C_Master_Write
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _LOOP
   560  06E7                     _LOOP:	
   561  06E7                     l80:	
   562                           ;incstack = 0
   563                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   564                           ;ADC_I2C.c: 86:     while(1)
   565                           
   566  06E7                     l917:	
   567                           
   568                           ;ADC_I2C.c: 87:   {;ADC_I2C.c: 88:         ANALOGICO();
   569  06E7  120A  118A  26D1  120A  118A  	fcall	_ANALOGICO
   570                           
   571                           ;ADC_I2C.c: 89:     I2C_Master_Start();
   572  06EC  120A  118A  26A8  120A  118A  	fcall	_I2C_Master_Start
   573                           
   574                           ;ADC_I2C.c: 90:     I2C_Master_Write(0x30);
   575  06F1  3030               	movlw	48
   576  06F2  00F0               	movwf	I2C_Master_Write@d
   577  06F3  3000               	movlw	0
   578  06F4  00F1               	movwf	I2C_Master_Write@d+1
   579  06F5  120A  118A  26BA  120A  118A  	fcall	_I2C_Master_Write
   580                           
   581                           ;ADC_I2C.c: 91:     I2C_Master_Write(y);
   582  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   583  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   584  06FC  0828               	movf	_y,w
   585  06FD  00F2               	movwf	??_LOOP
   586  06FE  01F3               	clrf	??_LOOP+1
   587  06FF  0872               	movf	??_LOOP,w
   588  0700  00F0               	movwf	I2C_Master_Write@d
   589  0701  0873               	movf	??_LOOP+1,w
   590  0702  00F1               	movwf	I2C_Master_Write@d+1
   591  0703  120A  118A  26BA  120A  118A  	fcall	_I2C_Master_Write
   592                           
   593                           ;ADC_I2C.c: 92:     I2C_Master_Stop();
   594  0708  120A  118A  26B1  120A  118A  	fcall	_I2C_Master_Stop
   595  070D                     l919:	
   596                           
   597                           ;ADC_I2C.c: 94:     _delay((unsigned long)((200)*(4000000/4000.0)));
   598  070D  3002               	movlw	2
   599  070E  00F4               	movwf	??_LOOP+2
   600  070F  3004               	movlw	4
   601  0710  00F3               	movwf	??_LOOP+1
   602  0711  30BA               	movlw	186
   603  0712  00F2               	movwf	??_LOOP
   604  0713                     u277:	
   605  0713  0BF2               	decfsz	??_LOOP,f
   606  0714  2F13               	goto	u277
   607  0715  0BF3               	decfsz	??_LOOP+1,f
   608  0716  2F13               	goto	u277
   609  0717  0BF4               	decfsz	??_LOOP+2,f
   610  0718  2F13               	goto	u277
   611  0719  0000               	nop
   612  071A  2EE7               	goto	l80
   613  071B  0008               	return
   614  071C                     __end_of_LOOP:	
   615                           
   616                           	psect	text2
   617  06BA                     __ptext2:	
   618 ;; *************** function _I2C_Master_Write *****************
   619 ;; Defined at:
   620 ;;		line 148 in file "ADC_I2C.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  d               2    0[COMMON] unsigned int 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0, pclath, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         2       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0
   637 ;;      Totals:         2       0       0       0       0
   638 ;;Total ram usage:        2 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; Hardware stack levels required when called:    1
   641 ;; This function calls:
   642 ;;		_I2C_Master_Wait
   643 ;; This function is called by:
   644 ;;		_LOOP
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _I2C_Master_Write
   650  06BA                     _I2C_Master_Write:	
   651  06BA                     l871:	
   652                           ;incstack = 0
   653                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
   654                           
   655                           
   656                           ;ADC_I2C.c: 148: void I2C_Master_Write(unsigned d);ADC_I2C.c: 149: {;ADC_I2C.c: 150:   I
      +                          2C_Master_Wait();
   657  06BA  120A  118A  26C4  120A  118A  	fcall	_I2C_Master_Wait
   658  06BF                     l873:	
   659                           
   660                           ;ADC_I2C.c: 151:   SSPBUF = d;
   661  06BF  0870               	movf	I2C_Master_Write@d,w
   662  06C0  1283               	bcf	3,5	;RP0=0, select bank0
   663  06C1  1303               	bcf	3,6	;RP1=0, select bank0
   664  06C2  0093               	movwf	19	;volatile
   665  06C3                     l110:	
   666  06C3  0008               	return
   667  06C4                     __end_of_I2C_Master_Write:	
   668                           
   669                           	psect	text3
   670  06B1                     __ptext3:	
   671 ;; *************** function _I2C_Master_Stop *****************
   672 ;; Defined at:
   673 ;;		line 141 in file "ADC_I2C.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    1
   694 ;; This function calls:
   695 ;;		_I2C_Master_Wait
   696 ;; This function is called by:
   697 ;;		_LOOP
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _I2C_Master_Stop
   703  06B1                     _I2C_Master_Stop:	
   704  06B1                     l877:	
   705                           ;incstack = 0
   706                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
   707                           
   708                           
   709                           ;ADC_I2C.c: 143:   I2C_Master_Wait();
   710  06B1  120A  118A  26C4  120A  118A  	fcall	_I2C_Master_Wait
   711  06B6                     l879:	
   712                           
   713                           ;ADC_I2C.c: 144:   PEN = 1;
   714  06B6  1683               	bsf	3,5	;RP0=1, select bank1
   715  06B7  1303               	bcf	3,6	;RP1=0, select bank1
   716  06B8  1511               	bsf	17,2	;volatile
   717  06B9                     l107:	
   718  06B9  0008               	return
   719  06BA                     __end_of_I2C_Master_Stop:	
   720                           
   721                           	psect	text4
   722  06A8                     __ptext4:	
   723 ;; *************** function _I2C_Master_Start *****************
   724 ;; Defined at:
   725 ;;		line 126 in file "ADC_I2C.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0
   742 ;;      Totals:         0       0       0       0       0
   743 ;;Total ram usage:        0 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    1
   746 ;; This function calls:
   747 ;;		_I2C_Master_Wait
   748 ;; This function is called by:
   749 ;;		_LOOP
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _I2C_Master_Start
   755  06A8                     _I2C_Master_Start:	
   756  06A8                     l865:	
   757                           ;incstack = 0
   758                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
   759                           
   760                           
   761                           ;ADC_I2C.c: 128:   I2C_Master_Wait();
   762  06A8  120A  118A  26C4  120A  118A  	fcall	_I2C_Master_Wait
   763  06AD                     l867:	
   764                           
   765                           ;ADC_I2C.c: 129:   SEN = 1;
   766  06AD  1683               	bsf	3,5	;RP0=1, select bank1
   767  06AE  1303               	bcf	3,6	;RP1=0, select bank1
   768  06AF  1411               	bsf	17,0	;volatile
   769  06B0                     l101:	
   770  06B0  0008               	return
   771  06B1                     __end_of_I2C_Master_Start:	
   772                           
   773                           	psect	text5
   774  06C4                     __ptext5:	
   775 ;; *************** function _I2C_Master_Wait *****************
   776 ;; Defined at:
   777 ;;		line 120 in file "ADC_I2C.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0
   794 ;;      Totals:         0       0       0       0       0
   795 ;;Total ram usage:        0 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_I2C_Master_Start
   801 ;;		_I2C_Master_Stop
   802 ;;		_I2C_Master_Write
   803 ;;		_I2C_Master_RepeatedStart
   804 ;;		_I2C_Master_Read
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _I2C_Master_Wait
   810  06C4                     _I2C_Master_Wait:	
   811  06C4                     l849:	
   812                           ;incstack = 0
   813                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
   814                           
   815  06C4                     l95:	
   816                           ;ADC_I2C.c: 122:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
   817                           
   818  06C4  1683               	bsf	3,5	;RP0=1, select bank1
   819  06C5  1303               	bcf	3,6	;RP1=0, select bank1
   820  06C6  1914               	btfsc	20,2	;volatile
   821  06C7  2EC9               	goto	u141
   822  06C8  2ECA               	goto	u140
   823  06C9                     u141:	
   824  06C9  2EC4               	goto	l95
   825  06CA                     u140:	
   826  06CA                     l851:	
   827  06CA  0811               	movf	17,w	;volatile
   828  06CB  391F               	andlw	31
   829  06CC  1D03               	btfss	3,2
   830  06CD  2ECF               	goto	u151
   831  06CE  2ED0               	goto	u150
   832  06CF                     u151:	
   833  06CF  2EC4               	goto	l95
   834  06D0                     u150:	
   835  06D0                     l98:	
   836  06D0  0008               	return
   837  06D1                     __end_of_I2C_Master_Wait:	
   838                           
   839                           	psect	text6
   840  06D1                     __ptext6:	
   841 ;; *************** function _ANALOGICO *****************
   842 ;; Defined at:
   843 ;;		line 99 in file "ADC_I2C.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, status,2, status,0
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0
   859 ;;      Temps:          1       0       0       0       0
   860 ;;      Totals:         1       0       0       0       0
   861 ;;Total ram usage:        1 bytes
   862 ;; Hardware stack levels used:    1
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_LOOP
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _ANALOGICO
   872  06D1                     _ANALOGICO:	
   873  06D1                     l853:	
   874                           ;incstack = 0
   875                           ; Regs used in _ANALOGICO: [wreg+status,2+status,0]
   876                           
   877                           
   878                           ;ADC_I2C.c: 100:     _delay((unsigned long)((1)*(4000000/4000.0)));
   879  06D1  30C7               	movlw	199
   880  06D2  00F0               	movwf	??_ANALOGICO
   881  06D3                     u287:	
   882  06D3  2ED4               	nop2
   883  06D4  0BF0               	decfsz	??_ANALOGICO,f
   884  06D5  2ED3               	goto	u287
   885  06D6  2ED7               	nop2
   886  06D7  2ED8               	nop2
   887  06D8                     l855:	
   888                           
   889                           ;ADC_I2C.c: 101:         ADCON0bits.CHS = 0000;
   890  06D8  30C3               	movlw	-61
   891  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   892  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   893  06DB  059F               	andwf	31,f	;volatile
   894  06DC                     l857:	
   895                           
   896                           ;ADC_I2C.c: 102:         ADCON0bits.ADON = 1;
   897  06DC  141F               	bsf	31,0	;volatile
   898  06DD                     l859:	
   899                           
   900                           ;ADC_I2C.c: 103:         ADCON0bits.GO = 1;
   901  06DD  149F               	bsf	31,1	;volatile
   902  06DE                     l86:	
   903                           ;ADC_I2C.c: 104:         while(ADCON0bits.GO);
   904                           
   905  06DE  189F               	btfsc	31,1	;volatile
   906  06DF  2EE1               	goto	u161
   907  06E0  2EE2               	goto	u160
   908  06E1                     u161:	
   909  06E1  2EDE               	goto	l86
   910  06E2                     u160:	
   911  06E2                     l861:	
   912                           
   913                           ;ADC_I2C.c: 105:         y = ADRESH;
   914  06E2  081E               	movf	30,w	;volatile
   915  06E3  00F0               	movwf	??_ANALOGICO
   916  06E4  0870               	movf	??_ANALOGICO,w
   917  06E5  00A8               	movwf	_y
   918  06E6                     l89:	
   919  06E6  0008               	return
   920  06E7                     __end_of_ANALOGICO:	
   921                           
   922                           	psect	text7
   923  071C                     __ptext7:	
   924 ;; *************** function _I2C_Master_Init *****************
   925 ;; Defined at:
   926 ;;		line 110 in file "ADC_I2C.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  c               4    0[BANK0 ] const unsigned long 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0, pclath, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   940 ;;      Params:         0       4       0       0       0
   941 ;;      Locals:         0       0       0       0       0
   942 ;;      Temps:          0       4       0       0       0
   943 ;;      Totals:         0       8       0       0       0
   944 ;;Total ram usage:        8 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    1
   947 ;; This function calls:
   948 ;;		___lldiv
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _I2C_Master_Init
   956  071C                     _I2C_Master_Init:	
   957  071C                     l907:	
   958                           ;incstack = 0
   959                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
   960                           
   961                           
   962                           ;ADC_I2C.c: 110: void I2C_Master_Init(const unsigned long c);ADC_I2C.c: 111: {;ADC_I2C.c
      +                          : 112:   SSPCON = 0b00101000;
   963  071C  3028               	movlw	40
   964  071D  1283               	bcf	3,5	;RP0=0, select bank0
   965  071E  1303               	bcf	3,6	;RP1=0, select bank0
   966  071F  0094               	movwf	20	;volatile
   967  0720                     l909:	
   968                           
   969                           ;ADC_I2C.c: 113:   SSPCON2 = 0;
   970  0720  1683               	bsf	3,5	;RP0=1, select bank1
   971  0721  1303               	bcf	3,6	;RP1=0, select bank1
   972  0722  0191               	clrf	17	;volatile
   973  0723                     l911:	
   974                           
   975                           ;ADC_I2C.c: 114:   SSPADD = (4000000/(4*c))-1;
   976  0723  1283               	bcf	3,5	;RP0=0, select bank0
   977  0724  1303               	bcf	3,6	;RP1=0, select bank0
   978  0725  0820               	movf	I2C_Master_Init@c,w
   979  0726  00A4               	movwf	??_I2C_Master_Init
   980  0727  0821               	movf	I2C_Master_Init@c+1,w
   981  0728  00A5               	movwf	??_I2C_Master_Init+1
   982  0729  0822               	movf	I2C_Master_Init@c+2,w
   983  072A  00A6               	movwf	??_I2C_Master_Init+2
   984  072B  0823               	movf	I2C_Master_Init@c+3,w
   985  072C  00A7               	movwf	??_I2C_Master_Init+3
   986  072D  3002               	movlw	2
   987  072E                     u245:	
   988  072E  1003               	clrc
   989  072F  0DA4               	rlf	??_I2C_Master_Init,f
   990  0730  0DA5               	rlf	??_I2C_Master_Init+1,f
   991  0731  0DA6               	rlf	??_I2C_Master_Init+2,f
   992  0732  0DA7               	rlf	??_I2C_Master_Init+3,f
   993  0733                     u240:	
   994  0733  3EFF               	addlw	-1
   995  0734  1D03               	skipz
   996  0735  2F2E               	goto	u245
   997  0736  0827               	movf	??_I2C_Master_Init+3,w
   998  0737  00F3               	movwf	___lldiv@divisor+3
   999  0738  0826               	movf	??_I2C_Master_Init+2,w
  1000  0739  00F2               	movwf	___lldiv@divisor+2
  1001  073A  0825               	movf	??_I2C_Master_Init+1,w
  1002  073B  00F1               	movwf	___lldiv@divisor+1
  1003  073C  0824               	movf	??_I2C_Master_Init,w
  1004  073D  00F0               	movwf	___lldiv@divisor
  1005  073E  3000               	movlw	0
  1006  073F  00F7               	movwf	___lldiv@dividend+3
  1007  0740  303D               	movlw	61
  1008  0741  00F6               	movwf	___lldiv@dividend+2
  1009  0742  3009               	movlw	9
  1010  0743  00F5               	movwf	___lldiv@dividend+1
  1011  0744  3000               	movlw	0
  1012  0745  00F4               	movwf	___lldiv@dividend
  1013  0746  120A  118A  2793  120A  118A  	fcall	___lldiv
  1014  074B  0870               	movf	?___lldiv,w
  1015  074C  3EFF               	addlw	255
  1016  074D  1683               	bsf	3,5	;RP0=1, select bank1
  1017  074E  1303               	bcf	3,6	;RP1=0, select bank1
  1018  074F  0093               	movwf	19	;volatile
  1019  0750                     l913:	
  1020                           
  1021                           ;ADC_I2C.c: 115:   SSPSTAT = 0;
  1022  0750  0194               	clrf	20	;volatile
  1023  0751                     l92:	
  1024  0751  0008               	return
  1025  0752                     __end_of_I2C_Master_Init:	
  1026                           
  1027                           	psect	text8
  1028  0793                     __ptext8:	
  1029 ;; *************** function ___lldiv *****************
  1030 ;; Defined at:
  1031 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  divisor         4    0[COMMON] unsigned long 
  1034 ;;  dividend        4    4[COMMON] unsigned long 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  quotient        4    9[COMMON] unsigned long 
  1037 ;;  counter         1   13[COMMON] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  4    0[COMMON] unsigned long 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         8       0       0       0       0
  1048 ;;      Locals:         5       0       0       0       0
  1049 ;;      Temps:          1       0       0       0       0
  1050 ;;      Totals:        14       0       0       0       0
  1051 ;;Total ram usage:       14 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_I2C_Master_Init
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           
  1061                           ;psect for function ___lldiv
  1062  0793                     ___lldiv:	
  1063  0793                     l883:	
  1064                           ;incstack = 0
  1065                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1066                           
  1067  0793  3000               	movlw	0
  1068  0794  00FC               	movwf	___lldiv@quotient+3
  1069  0795  3000               	movlw	0
  1070  0796  00FB               	movwf	___lldiv@quotient+2
  1071  0797  3000               	movlw	0
  1072  0798  00FA               	movwf	___lldiv@quotient+1
  1073  0799  3000               	movlw	0
  1074  079A  00F9               	movwf	___lldiv@quotient
  1075  079B  0873               	movf	___lldiv@divisor+3,w
  1076  079C  0472               	iorwf	___lldiv@divisor+2,w
  1077  079D  0471               	iorwf	___lldiv@divisor+1,w
  1078  079E  0470               	iorwf	___lldiv@divisor,w
  1079  079F  1903               	skipnz
  1080  07A0  2FA2               	goto	u171
  1081  07A1  2FA3               	goto	u170
  1082  07A2                     u171:	
  1083  07A2  2FF0               	goto	l903
  1084  07A3                     u170:	
  1085  07A3                     l885:	
  1086  07A3  01FD               	clrf	___lldiv@counter
  1087  07A4  0AFD               	incf	___lldiv@counter,f
  1088  07A5  2FB3               	goto	l889
  1089  07A6                     l887:	
  1090  07A6  3001               	movlw	1
  1091  07A7  00F8               	movwf	??___lldiv
  1092  07A8                     u185:	
  1093  07A8  1003               	clrc
  1094  07A9  0DF0               	rlf	___lldiv@divisor,f
  1095  07AA  0DF1               	rlf	___lldiv@divisor+1,f
  1096  07AB  0DF2               	rlf	___lldiv@divisor+2,f
  1097  07AC  0DF3               	rlf	___lldiv@divisor+3,f
  1098  07AD  0BF8               	decfsz	??___lldiv,f
  1099  07AE  2FA8               	goto	u185
  1100  07AF  3001               	movlw	1
  1101  07B0  00F8               	movwf	??___lldiv
  1102  07B1  0878               	movf	??___lldiv,w
  1103  07B2  07FD               	addwf	___lldiv@counter,f
  1104  07B3                     l889:	
  1105  07B3  1FF3               	btfss	___lldiv@divisor+3,7
  1106  07B4  2FB6               	goto	u191
  1107  07B5  2FB7               	goto	u190
  1108  07B6                     u191:	
  1109  07B6  2FA6               	goto	l887
  1110  07B7                     u190:	
  1111  07B7                     l891:	
  1112  07B7  3001               	movlw	1
  1113  07B8  00F8               	movwf	??___lldiv
  1114  07B9                     u205:	
  1115  07B9  1003               	clrc
  1116  07BA  0DF9               	rlf	___lldiv@quotient,f
  1117  07BB  0DFA               	rlf	___lldiv@quotient+1,f
  1118  07BC  0DFB               	rlf	___lldiv@quotient+2,f
  1119  07BD  0DFC               	rlf	___lldiv@quotient+3,f
  1120  07BE  0BF8               	decfsz	??___lldiv,f
  1121  07BF  2FB9               	goto	u205
  1122  07C0                     l893:	
  1123  07C0  0873               	movf	___lldiv@divisor+3,w
  1124  07C1  0277               	subwf	___lldiv@dividend+3,w
  1125  07C2  1D03               	skipz
  1126  07C3  2FCE               	goto	u215
  1127  07C4  0872               	movf	___lldiv@divisor+2,w
  1128  07C5  0276               	subwf	___lldiv@dividend+2,w
  1129  07C6  1D03               	skipz
  1130  07C7  2FCE               	goto	u215
  1131  07C8  0871               	movf	___lldiv@divisor+1,w
  1132  07C9  0275               	subwf	___lldiv@dividend+1,w
  1133  07CA  1D03               	skipz
  1134  07CB  2FCE               	goto	u215
  1135  07CC  0870               	movf	___lldiv@divisor,w
  1136  07CD  0274               	subwf	___lldiv@dividend,w
  1137  07CE                     u215:	
  1138  07CE  1C03               	skipc
  1139  07CF  2FD1               	goto	u211
  1140  07D0  2FD2               	goto	u210
  1141  07D1                     u211:	
  1142  07D1  2FE1               	goto	l899
  1143  07D2                     u210:	
  1144  07D2                     l895:	
  1145  07D2  0870               	movf	___lldiv@divisor,w
  1146  07D3  02F4               	subwf	___lldiv@dividend,f
  1147  07D4  0871               	movf	___lldiv@divisor+1,w
  1148  07D5  1C03               	skipc
  1149  07D6  0F71               	incfsz	___lldiv@divisor+1,w
  1150  07D7  02F5               	subwf	___lldiv@dividend+1,f
  1151  07D8  0872               	movf	___lldiv@divisor+2,w
  1152  07D9  1C03               	skipc
  1153  07DA  0F72               	incfsz	___lldiv@divisor+2,w
  1154  07DB  02F6               	subwf	___lldiv@dividend+2,f
  1155  07DC  0873               	movf	___lldiv@divisor+3,w
  1156  07DD  1C03               	skipc
  1157  07DE  0F73               	incfsz	___lldiv@divisor+3,w
  1158  07DF  02F7               	subwf	___lldiv@dividend+3,f
  1159  07E0                     l897:	
  1160  07E0  1479               	bsf	___lldiv@quotient,0
  1161  07E1                     l899:	
  1162  07E1  3001               	movlw	1
  1163  07E2                     u225:	
  1164  07E2  1003               	clrc
  1165  07E3  0CF3               	rrf	___lldiv@divisor+3,f
  1166  07E4  0CF2               	rrf	___lldiv@divisor+2,f
  1167  07E5  0CF1               	rrf	___lldiv@divisor+1,f
  1168  07E6  0CF0               	rrf	___lldiv@divisor,f
  1169  07E7  3EFF               	addlw	-1
  1170  07E8  1D03               	skipz
  1171  07E9  2FE2               	goto	u225
  1172  07EA                     l901:	
  1173  07EA  3001               	movlw	1
  1174  07EB  02FD               	subwf	___lldiv@counter,f
  1175  07EC  1D03               	btfss	3,2
  1176  07ED  2FEF               	goto	u231
  1177  07EE  2FF0               	goto	u230
  1178  07EF                     u231:	
  1179  07EF  2FB7               	goto	l891
  1180  07F0                     u230:	
  1181  07F0                     l903:	
  1182  07F0  087C               	movf	___lldiv@quotient+3,w
  1183  07F1  00F3               	movwf	?___lldiv+3
  1184  07F2  087B               	movf	___lldiv@quotient+2,w
  1185  07F3  00F2               	movwf	?___lldiv+2
  1186  07F4  087A               	movf	___lldiv@quotient+1,w
  1187  07F5  00F1               	movwf	?___lldiv+1
  1188  07F6  0879               	movf	___lldiv@quotient,w
  1189  07F7  00F0               	movwf	?___lldiv
  1190  07F8                     l235:	
  1191  07F8  0008               	return
  1192  07F9                     __end_of___lldiv:	
  1193  007E                     btemp	set	126	;btemp
  1194  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_I2C_Master_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     586
                    _I2C_Master_Init
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 3     3      0     174
                                              2 COMMON     3     3      0
                          _ANALOGICO
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _LOOP
     _ANALOGICO
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       9       5       11.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 26 20:16:05 2020

                        _y 0028                __CFG_CP$OFF 0000                         l80 06E7  
                       l92 0751                         l77 0790                         l86 06DE  
                       l95 06C4                         l89 06E6                         l98 06D0  
       __size_of_ANALOGICO 0016                        l101 06B0                        l110 06C3  
                      l107 06B9                        l235 07F8                        l901 07EA  
                      l903 07F0                        l911 0723                        l913 0750  
                      l921 0752                        l907 071C                        l851 06CA  
                      l931 075C                        l923 0758                        l909 0720  
                      l861 06E2                        l853 06D1                        l917 06E7  
                      l941 0767                        l933 0760                        l925 0759  
                      l855 06D8                        l871 06BA                        l919 070D  
                      l951 076F                        l943 0769                        l935 0761  
                      l927 075A                        l857 06DC                        l849 06C4  
                      l865 06A8                        l873 06BF                        l961 0774  
                      l953 0770                        l945 076A                        l937 0765  
                      l929 075B                        l891 07B7                        l883 0793  
                      l859 06DD                        l867 06AD                        l971 078B  
                      l963 0777                        l955 0771                        l947 076D  
                      l939 0766                        l893 07C0                        l885 07A3  
                      l877 06B1                        l965 0778                        l957 0772  
                      l949 076E                        l895 07D2                        l887 07A6  
                      l879 06B6                        l967 0779                        l959 0773  
                      l897 07E0                        l889 07B3                        l969 0788  
                      l899 07E1                        u210 07D2                        u211 07D1  
                      u140 06CA                        u205 07B9                        u141 06C9  
                      u230 07F0                        u150 06D0                        u231 07EF  
                      u215 07CE                        u151 06CF                        u240 0733  
                      u160 06E2                        u225 07E2                        u161 06E1  
                      u170 07A3                        u171 07A2                        u245 072E  
                      u190 07B7                        u191 07B6                        _PEN 048A  
                      u185 07A8               __CFG_CPD$OFF 0000                        u277 0713  
                      u287 06D3                        _SEN 0488               __CFG_LVP$OFF 0000  
                     _RCEN 048B                       _LOOP 06E7                       _RSEN 0489  
             __CFG_WRT$OFF 0000                       _main 0752                       btemp 007E  
                     start 0000              __CFG_IESO$OFF 0000                      ?_LOOP 0070  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _ACKEN 048C                      _ACKDT 048D  
            __CFG_WDTE$OFF 0000                      _ANSEL 0188            __end_of___lldiv 07F9  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089             __CFG_FCMEN$OFF 0000             __CFG_BOREN$OFF 0000  
        __end_of_ANALOGICO 06E7                      status 0003                      wtemp0 007E  
             __end_of_LOOP 071C             __CFG_MCLRE$OFF 0000            __initialization 07F9  
             __end_of_main 0793                     ??_LOOP 0072                     ??_main 007E  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072                     _ADRESH 001E                     _ANSELH 0189  
                   _SSPADD 0093                     _SSPCON 0014                     _SSPBUF 0013  
           __CFG_PWRTE$OFF 0000                  ??___lldiv 0078    __end_of__initialization 07FC  
           __pcstackCOMMON 0070                 __pbssBANK0 0028                 __pmaintext 0752  
                  _SSPCON2 0091                    _SSPSTAT 0094                  _ANALOGICO 06D1  
                  ___lldiv 0793                    __ptext1 06E7                    __ptext2 06BA  
                  __ptext3 06B1                    __ptext4 06A8                    __ptext5 06C4  
                  __ptext6 06D1                    __ptext7 071C                    __ptext8 0793  
 __size_of_I2C_Master_Init 0036   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009                 ?_ANALOGICO 0070  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020                  _PORTDbits 0008        start_initialization 07F9  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                ??_ANALOGICO 0070                  ___latbits 0002  
            __pcstackBANK0 0020           _I2C_Master_Start 06A8           _I2C_Master_Write 06BA  
                 ?___lldiv 0070                 _ADCON0bits 001F                 _ADCON1bits 009F  
         __size_of___lldiv 0066            _I2C_Master_Init 071C            _I2C_Master_Wait 06C4  
          _I2C_Master_Stop 06B1          __CFG_BOR4V$BOR40V 0000              __size_of_LOOP 0035  
            __size_of_main 0041   __end_of_I2C_Master_Start 06B1   __end_of_I2C_Master_Write 06C4  
         ___lldiv@dividend 0074                 _OSCCONbits 008F    __end_of_I2C_Master_Init 0752  
  __end_of_I2C_Master_Wait 06D1    __end_of_I2C_Master_Stop 06BA           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070  
